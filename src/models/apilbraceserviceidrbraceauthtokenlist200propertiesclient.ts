/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type APILBraceserviceIdRBraceAuthTokenList200PropertiesClient = {};

/** @internal */
export const APILBraceserviceIdRBraceAuthTokenList200PropertiesClient$inboundSchema:
  z.ZodType<
    APILBraceserviceIdRBraceAuthTokenList200PropertiesClient,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type APILBraceserviceIdRBraceAuthTokenList200PropertiesClient$Outbound =
  {};

/** @internal */
export const APILBraceserviceIdRBraceAuthTokenList200PropertiesClient$outboundSchema:
  z.ZodType<
    APILBraceserviceIdRBraceAuthTokenList200PropertiesClient$Outbound,
    z.ZodTypeDef,
    APILBraceserviceIdRBraceAuthTokenList200PropertiesClient
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace APILBraceserviceIdRBraceAuthTokenList200PropertiesClient$ {
  /** @deprecated use `APILBraceserviceIdRBraceAuthTokenList200PropertiesClient$inboundSchema` instead. */
  export const inboundSchema =
    APILBraceserviceIdRBraceAuthTokenList200PropertiesClient$inboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceAuthTokenList200PropertiesClient$outboundSchema` instead. */
  export const outboundSchema =
    APILBraceserviceIdRBraceAuthTokenList200PropertiesClient$outboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceAuthTokenList200PropertiesClient$Outbound` instead. */
  export type Outbound =
    APILBraceserviceIdRBraceAuthTokenList200PropertiesClient$Outbound;
}

export function apilBraceserviceIdRBraceAuthTokenList200PropertiesClientToJSON(
  apilBraceserviceIdRBraceAuthTokenList200PropertiesClient:
    APILBraceserviceIdRBraceAuthTokenList200PropertiesClient,
): string {
  return JSON.stringify(
    APILBraceserviceIdRBraceAuthTokenList200PropertiesClient$outboundSchema
      .parse(apilBraceserviceIdRBraceAuthTokenList200PropertiesClient),
  );
}

export function apilBraceserviceIdRBraceAuthTokenList200PropertiesClientFromJSON(
  jsonString: string,
): SafeParseResult<
  APILBraceserviceIdRBraceAuthTokenList200PropertiesClient,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      APILBraceserviceIdRBraceAuthTokenList200PropertiesClient$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'APILBraceserviceIdRBraceAuthTokenList200PropertiesClient' from JSON`,
  );
}
