/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type APILBraceserviceIdRBraceDeviceComplete = {};

/** @internal */
export const APILBraceserviceIdRBraceDeviceComplete$inboundSchema: z.ZodType<
  APILBraceserviceIdRBraceDeviceComplete,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type APILBraceserviceIdRBraceDeviceComplete$Outbound = {};

/** @internal */
export const APILBraceserviceIdRBraceDeviceComplete$outboundSchema: z.ZodType<
  APILBraceserviceIdRBraceDeviceComplete$Outbound,
  z.ZodTypeDef,
  APILBraceserviceIdRBraceDeviceComplete
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace APILBraceserviceIdRBraceDeviceComplete$ {
  /** @deprecated use `APILBraceserviceIdRBraceDeviceComplete$inboundSchema` instead. */
  export const inboundSchema =
    APILBraceserviceIdRBraceDeviceComplete$inboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceDeviceComplete$outboundSchema` instead. */
  export const outboundSchema =
    APILBraceserviceIdRBraceDeviceComplete$outboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceDeviceComplete$Outbound` instead. */
  export type Outbound = APILBraceserviceIdRBraceDeviceComplete$Outbound;
}

export function apilBraceserviceIdRBraceDeviceCompleteToJSON(
  apilBraceserviceIdRBraceDeviceComplete:
    APILBraceserviceIdRBraceDeviceComplete,
): string {
  return JSON.stringify(
    APILBraceserviceIdRBraceDeviceComplete$outboundSchema.parse(
      apilBraceserviceIdRBraceDeviceComplete,
    ),
  );
}

export function apilBraceserviceIdRBraceDeviceCompleteFromJSON(
  jsonString: string,
): SafeParseResult<APILBraceserviceIdRBraceDeviceComplete, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      APILBraceserviceIdRBraceDeviceComplete$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'APILBraceserviceIdRBraceDeviceComplete' from JSON`,
  );
}
