/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type UserinfoIssueRequest = {};

/** @internal */
export const UserinfoIssueRequest$inboundSchema: z.ZodType<
  UserinfoIssueRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UserinfoIssueRequest$Outbound = {};

/** @internal */
export const UserinfoIssueRequest$outboundSchema: z.ZodType<
  UserinfoIssueRequest$Outbound,
  z.ZodTypeDef,
  UserinfoIssueRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserinfoIssueRequest$ {
  /** @deprecated use `UserinfoIssueRequest$inboundSchema` instead. */
  export const inboundSchema = UserinfoIssueRequest$inboundSchema;
  /** @deprecated use `UserinfoIssueRequest$outboundSchema` instead. */
  export const outboundSchema = UserinfoIssueRequest$outboundSchema;
  /** @deprecated use `UserinfoIssueRequest$Outbound` instead. */
  export type Outbound = UserinfoIssueRequest$Outbound;
}

export function userinfoIssueRequestToJSON(
  userinfoIssueRequest: UserinfoIssueRequest,
): string {
  return JSON.stringify(
    UserinfoIssueRequest$outboundSchema.parse(userinfoIssueRequest),
  );
}

export function userinfoIssueRequestFromJSON(
  jsonString: string,
): SafeParseResult<UserinfoIssueRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UserinfoIssueRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UserinfoIssueRequest' from JSON`,
  );
}
