/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * An object containing api_serviceid_federation_registration data
 */
export type ApiServiceIdFederationRegistration = {
  /**
   * The entity configuration of a relying party.
   *
   * @remarks
   */
  entityConfiguration?: string | undefined;
  /**
   * The trust chain of a relying party.
   *
   * @remarks
   */
  trustChain?: string | undefined;
};

/** @internal */
export const ApiServiceIdFederationRegistration$inboundSchema: z.ZodType<
  ApiServiceIdFederationRegistration,
  z.ZodTypeDef,
  unknown
> = z.object({
  entityConfiguration: z.string().optional(),
  trustChain: z.string().optional(),
});

/** @internal */
export type ApiServiceIdFederationRegistration$Outbound = {
  entityConfiguration?: string | undefined;
  trustChain?: string | undefined;
};

/** @internal */
export const ApiServiceIdFederationRegistration$outboundSchema: z.ZodType<
  ApiServiceIdFederationRegistration$Outbound,
  z.ZodTypeDef,
  ApiServiceIdFederationRegistration
> = z.object({
  entityConfiguration: z.string().optional(),
  trustChain: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiServiceIdFederationRegistration$ {
  /** @deprecated use `ApiServiceIdFederationRegistration$inboundSchema` instead. */
  export const inboundSchema = ApiServiceIdFederationRegistration$inboundSchema;
  /** @deprecated use `ApiServiceIdFederationRegistration$outboundSchema` instead. */
  export const outboundSchema =
    ApiServiceIdFederationRegistration$outboundSchema;
  /** @deprecated use `ApiServiceIdFederationRegistration$Outbound` instead. */
  export type Outbound = ApiServiceIdFederationRegistration$Outbound;
}

export function apiServiceIdFederationRegistrationToJSON(
  apiServiceIdFederationRegistration: ApiServiceIdFederationRegistration,
): string {
  return JSON.stringify(
    ApiServiceIdFederationRegistration$outboundSchema.parse(
      apiServiceIdFederationRegistration,
    ),
  );
}

export function apiServiceIdFederationRegistrationFromJSON(
  jsonString: string,
): SafeParseResult<ApiServiceIdFederationRegistration, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ApiServiceIdFederationRegistration$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiServiceIdFederationRegistration' from JSON`,
  );
}
