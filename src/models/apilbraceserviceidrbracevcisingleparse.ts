/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type APILBraceserviceIdRBraceVciSingleParse = {};

/** @internal */
export const APILBraceserviceIdRBraceVciSingleParse$inboundSchema: z.ZodType<
  APILBraceserviceIdRBraceVciSingleParse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type APILBraceserviceIdRBraceVciSingleParse$Outbound = {};

/** @internal */
export const APILBraceserviceIdRBraceVciSingleParse$outboundSchema: z.ZodType<
  APILBraceserviceIdRBraceVciSingleParse$Outbound,
  z.ZodTypeDef,
  APILBraceserviceIdRBraceVciSingleParse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace APILBraceserviceIdRBraceVciSingleParse$ {
  /** @deprecated use `APILBraceserviceIdRBraceVciSingleParse$inboundSchema` instead. */
  export const inboundSchema =
    APILBraceserviceIdRBraceVciSingleParse$inboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceVciSingleParse$outboundSchema` instead. */
  export const outboundSchema =
    APILBraceserviceIdRBraceVciSingleParse$outboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceVciSingleParse$Outbound` instead. */
  export type Outbound = APILBraceserviceIdRBraceVciSingleParse$Outbound;
}

export function apilBraceserviceIdRBraceVciSingleParseToJSON(
  apilBraceserviceIdRBraceVciSingleParse:
    APILBraceserviceIdRBraceVciSingleParse,
): string {
  return JSON.stringify(
    APILBraceserviceIdRBraceVciSingleParse$outboundSchema.parse(
      apilBraceserviceIdRBraceVciSingleParse,
    ),
  );
}

export function apilBraceserviceIdRBraceVciSingleParseFromJSON(
  jsonString: string,
): SafeParseResult<APILBraceserviceIdRBraceVciSingleParse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      APILBraceserviceIdRBraceVciSingleParse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'APILBraceserviceIdRBraceVciSingleParse' from JSON`,
  );
}
