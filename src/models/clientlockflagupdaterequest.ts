/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ClientLockFlagUpdateRequest = {};

/** @internal */
export const ClientLockFlagUpdateRequest$inboundSchema: z.ZodType<
  ClientLockFlagUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ClientLockFlagUpdateRequest$Outbound = {};

/** @internal */
export const ClientLockFlagUpdateRequest$outboundSchema: z.ZodType<
  ClientLockFlagUpdateRequest$Outbound,
  z.ZodTypeDef,
  ClientLockFlagUpdateRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientLockFlagUpdateRequest$ {
  /** @deprecated use `ClientLockFlagUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = ClientLockFlagUpdateRequest$inboundSchema;
  /** @deprecated use `ClientLockFlagUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = ClientLockFlagUpdateRequest$outboundSchema;
  /** @deprecated use `ClientLockFlagUpdateRequest$Outbound` instead. */
  export type Outbound = ClientLockFlagUpdateRequest$Outbound;
}

export function clientLockFlagUpdateRequestToJSON(
  clientLockFlagUpdateRequest: ClientLockFlagUpdateRequest,
): string {
  return JSON.stringify(
    ClientLockFlagUpdateRequest$outboundSchema.parse(
      clientLockFlagUpdateRequest,
    ),
  );
}

export function clientLockFlagUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<ClientLockFlagUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ClientLockFlagUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ClientLockFlagUpdateRequest' from JSON`,
  );
}
