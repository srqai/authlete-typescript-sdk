/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type PushedAuthRequest = {};

/** @internal */
export const PushedAuthRequest$inboundSchema: z.ZodType<
  PushedAuthRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PushedAuthRequest$Outbound = {};

/** @internal */
export const PushedAuthRequest$outboundSchema: z.ZodType<
  PushedAuthRequest$Outbound,
  z.ZodTypeDef,
  PushedAuthRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PushedAuthRequest$ {
  /** @deprecated use `PushedAuthRequest$inboundSchema` instead. */
  export const inboundSchema = PushedAuthRequest$inboundSchema;
  /** @deprecated use `PushedAuthRequest$outboundSchema` instead. */
  export const outboundSchema = PushedAuthRequest$outboundSchema;
  /** @deprecated use `PushedAuthRequest$Outbound` instead. */
  export type Outbound = PushedAuthRequest$Outbound;
}

export function pushedAuthRequestToJSON(
  pushedAuthRequest: PushedAuthRequest,
): string {
  return JSON.stringify(
    PushedAuthRequest$outboundSchema.parse(pushedAuthRequest),
  );
}

export function pushedAuthRequestFromJSON(
  jsonString: string,
): SafeParseResult<PushedAuthRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PushedAuthRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PushedAuthRequest' from JSON`,
  );
}
