/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type JoseVerifyRequest = {};

/** @internal */
export const JoseVerifyRequest$inboundSchema: z.ZodType<
  JoseVerifyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type JoseVerifyRequest$Outbound = {};

/** @internal */
export const JoseVerifyRequest$outboundSchema: z.ZodType<
  JoseVerifyRequest$Outbound,
  z.ZodTypeDef,
  JoseVerifyRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JoseVerifyRequest$ {
  /** @deprecated use `JoseVerifyRequest$inboundSchema` instead. */
  export const inboundSchema = JoseVerifyRequest$inboundSchema;
  /** @deprecated use `JoseVerifyRequest$outboundSchema` instead. */
  export const outboundSchema = JoseVerifyRequest$outboundSchema;
  /** @deprecated use `JoseVerifyRequest$Outbound` instead. */
  export type Outbound = JoseVerifyRequest$Outbound;
}

export function joseVerifyRequestToJSON(
  joseVerifyRequest: JoseVerifyRequest,
): string {
  return JSON.stringify(
    JoseVerifyRequest$outboundSchema.parse(joseVerifyRequest),
  );
}

export function joseVerifyRequestFromJSON(
  jsonString: string,
): SafeParseResult<JoseVerifyRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => JoseVerifyRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'JoseVerifyRequest' from JSON`,
  );
}
