/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * An object containing api_serviceid_client_secret_update_clientidentifie data
 */
export type ApiServiceIdClientSecretUpdateClientIdentifie = {
  /**
   * The new value of the client secret. Valid characters for a client secret are `A-Z`, `a-z`, `0-9`,
   *
   * @remarks
   * `-`, and `_`. The maximum length of a client secret is 86.
   */
  clientSecret: string;
};

/** @internal */
export const ApiServiceIdClientSecretUpdateClientIdentifie$inboundSchema:
  z.ZodType<
    ApiServiceIdClientSecretUpdateClientIdentifie,
    z.ZodTypeDef,
    unknown
  > = z.object({
    clientSecret: z.string(),
  });

/** @internal */
export type ApiServiceIdClientSecretUpdateClientIdentifie$Outbound = {
  clientSecret: string;
};

/** @internal */
export const ApiServiceIdClientSecretUpdateClientIdentifie$outboundSchema:
  z.ZodType<
    ApiServiceIdClientSecretUpdateClientIdentifie$Outbound,
    z.ZodTypeDef,
    ApiServiceIdClientSecretUpdateClientIdentifie
  > = z.object({
    clientSecret: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiServiceIdClientSecretUpdateClientIdentifie$ {
  /** @deprecated use `ApiServiceIdClientSecretUpdateClientIdentifie$inboundSchema` instead. */
  export const inboundSchema =
    ApiServiceIdClientSecretUpdateClientIdentifie$inboundSchema;
  /** @deprecated use `ApiServiceIdClientSecretUpdateClientIdentifie$outboundSchema` instead. */
  export const outboundSchema =
    ApiServiceIdClientSecretUpdateClientIdentifie$outboundSchema;
  /** @deprecated use `ApiServiceIdClientSecretUpdateClientIdentifie$Outbound` instead. */
  export type Outbound = ApiServiceIdClientSecretUpdateClientIdentifie$Outbound;
}

export function apiServiceIdClientSecretUpdateClientIdentifieToJSON(
  apiServiceIdClientSecretUpdateClientIdentifie:
    ApiServiceIdClientSecretUpdateClientIdentifie,
): string {
  return JSON.stringify(
    ApiServiceIdClientSecretUpdateClientIdentifie$outboundSchema.parse(
      apiServiceIdClientSecretUpdateClientIdentifie,
    ),
  );
}

export function apiServiceIdClientSecretUpdateClientIdentifieFromJSON(
  jsonString: string,
): SafeParseResult<
  ApiServiceIdClientSecretUpdateClientIdentifie,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ApiServiceIdClientSecretUpdateClientIdentifie$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ApiServiceIdClientSecretUpdateClientIdentifie' from JSON`,
  );
}
