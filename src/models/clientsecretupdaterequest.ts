/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ClientSecretUpdateRequest = {};

/** @internal */
export const ClientSecretUpdateRequest$inboundSchema: z.ZodType<
  ClientSecretUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ClientSecretUpdateRequest$Outbound = {};

/** @internal */
export const ClientSecretUpdateRequest$outboundSchema: z.ZodType<
  ClientSecretUpdateRequest$Outbound,
  z.ZodTypeDef,
  ClientSecretUpdateRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientSecretUpdateRequest$ {
  /** @deprecated use `ClientSecretUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = ClientSecretUpdateRequest$inboundSchema;
  /** @deprecated use `ClientSecretUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = ClientSecretUpdateRequest$outboundSchema;
  /** @deprecated use `ClientSecretUpdateRequest$Outbound` instead. */
  export type Outbound = ClientSecretUpdateRequest$Outbound;
}

export function clientSecretUpdateRequestToJSON(
  clientSecretUpdateRequest: ClientSecretUpdateRequest,
): string {
  return JSON.stringify(
    ClientSecretUpdateRequest$outboundSchema.parse(clientSecretUpdateRequest),
  );
}

export function clientSecretUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<ClientSecretUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ClientSecretUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ClientSecretUpdateRequest' from JSON`,
  );
}
