/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType = {};

/** @internal */
export const APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType$inboundSchema:
  z.ZodType<
    APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType$Outbound =
  {};

/** @internal */
export const APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType$outboundSchema:
  z.ZodType<
    APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType$Outbound,
    z.ZodTypeDef,
    APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType$ {
  /** @deprecated use `APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType$inboundSchema` instead. */
  export const inboundSchema =
    APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType$inboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType$outboundSchema` instead. */
  export const outboundSchema =
    APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType$outboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType$Outbound` instead. */
  export type Outbound =
    APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType$Outbound;
}

export function apilBraceserviceIdRBraceAuthToken200PropertiesActorTokenTypeToJSON(
  apilBraceserviceIdRBraceAuthToken200PropertiesActorTokenType:
    APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType,
): string {
  return JSON.stringify(
    APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType$outboundSchema
      .parse(apilBraceserviceIdRBraceAuthToken200PropertiesActorTokenType),
  );
}

export function apilBraceserviceIdRBraceAuthToken200PropertiesActorTokenTypeFromJSON(
  jsonString: string,
): SafeParseResult<
  APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'APILBraceserviceIdRBraceAuthToken200PropertiesActorTokenType' from JSON`,
  );
}
