/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ClientGrantedScopesResponse = {};

/** @internal */
export const ClientGrantedScopesResponse$inboundSchema: z.ZodType<
  ClientGrantedScopesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ClientGrantedScopesResponse$Outbound = {};

/** @internal */
export const ClientGrantedScopesResponse$outboundSchema: z.ZodType<
  ClientGrantedScopesResponse$Outbound,
  z.ZodTypeDef,
  ClientGrantedScopesResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientGrantedScopesResponse$ {
  /** @deprecated use `ClientGrantedScopesResponse$inboundSchema` instead. */
  export const inboundSchema = ClientGrantedScopesResponse$inboundSchema;
  /** @deprecated use `ClientGrantedScopesResponse$outboundSchema` instead. */
  export const outboundSchema = ClientGrantedScopesResponse$outboundSchema;
  /** @deprecated use `ClientGrantedScopesResponse$Outbound` instead. */
  export type Outbound = ClientGrantedScopesResponse$Outbound;
}

export function clientGrantedScopesResponseToJSON(
  clientGrantedScopesResponse: ClientGrantedScopesResponse,
): string {
  return JSON.stringify(
    ClientGrantedScopesResponse$outboundSchema.parse(
      clientGrantedScopesResponse,
    ),
  );
}

export function clientGrantedScopesResponseFromJSON(
  jsonString: string,
): SafeParseResult<ClientGrantedScopesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ClientGrantedScopesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ClientGrantedScopesResponse' from JSON`,
  );
}
