/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type APILBraceserviceIdRBraceAuthTokenRevoke = {};

/** @internal */
export const APILBraceserviceIdRBraceAuthTokenRevoke$inboundSchema: z.ZodType<
  APILBraceserviceIdRBraceAuthTokenRevoke,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type APILBraceserviceIdRBraceAuthTokenRevoke$Outbound = {};

/** @internal */
export const APILBraceserviceIdRBraceAuthTokenRevoke$outboundSchema: z.ZodType<
  APILBraceserviceIdRBraceAuthTokenRevoke$Outbound,
  z.ZodTypeDef,
  APILBraceserviceIdRBraceAuthTokenRevoke
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace APILBraceserviceIdRBraceAuthTokenRevoke$ {
  /** @deprecated use `APILBraceserviceIdRBraceAuthTokenRevoke$inboundSchema` instead. */
  export const inboundSchema =
    APILBraceserviceIdRBraceAuthTokenRevoke$inboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceAuthTokenRevoke$outboundSchema` instead. */
  export const outboundSchema =
    APILBraceserviceIdRBraceAuthTokenRevoke$outboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceAuthTokenRevoke$Outbound` instead. */
  export type Outbound = APILBraceserviceIdRBraceAuthTokenRevoke$Outbound;
}

export function apilBraceserviceIdRBraceAuthTokenRevokeToJSON(
  apilBraceserviceIdRBraceAuthTokenRevoke:
    APILBraceserviceIdRBraceAuthTokenRevoke,
): string {
  return JSON.stringify(
    APILBraceserviceIdRBraceAuthTokenRevoke$outboundSchema.parse(
      apilBraceserviceIdRBraceAuthTokenRevoke,
    ),
  );
}

export function apilBraceserviceIdRBraceAuthTokenRevokeFromJSON(
  jsonString: string,
): SafeParseResult<
  APILBraceserviceIdRBraceAuthTokenRevoke,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      APILBraceserviceIdRBraceAuthTokenRevoke$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'APILBraceserviceIdRBraceAuthTokenRevoke' from JSON`,
  );
}
