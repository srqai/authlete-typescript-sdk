/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type RevocationRequest = {};

/** @internal */
export const RevocationRequest$inboundSchema: z.ZodType<
  RevocationRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type RevocationRequest$Outbound = {};

/** @internal */
export const RevocationRequest$outboundSchema: z.ZodType<
  RevocationRequest$Outbound,
  z.ZodTypeDef,
  RevocationRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RevocationRequest$ {
  /** @deprecated use `RevocationRequest$inboundSchema` instead. */
  export const inboundSchema = RevocationRequest$inboundSchema;
  /** @deprecated use `RevocationRequest$outboundSchema` instead. */
  export const outboundSchema = RevocationRequest$outboundSchema;
  /** @deprecated use `RevocationRequest$Outbound` instead. */
  export type Outbound = RevocationRequest$Outbound;
}

export function revocationRequestToJSON(
  revocationRequest: RevocationRequest,
): string {
  return JSON.stringify(
    RevocationRequest$outboundSchema.parse(revocationRequest),
  );
}

export function revocationRequestFromJSON(
  jsonString: string,
): SafeParseResult<RevocationRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RevocationRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RevocationRequest' from JSON`,
  );
}
