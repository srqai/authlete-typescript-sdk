/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type TokenFailRequest = {};

/** @internal */
export const TokenFailRequest$inboundSchema: z.ZodType<
  TokenFailRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type TokenFailRequest$Outbound = {};

/** @internal */
export const TokenFailRequest$outboundSchema: z.ZodType<
  TokenFailRequest$Outbound,
  z.ZodTypeDef,
  TokenFailRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TokenFailRequest$ {
  /** @deprecated use `TokenFailRequest$inboundSchema` instead. */
  export const inboundSchema = TokenFailRequest$inboundSchema;
  /** @deprecated use `TokenFailRequest$outboundSchema` instead. */
  export const outboundSchema = TokenFailRequest$outboundSchema;
  /** @deprecated use `TokenFailRequest$Outbound` instead. */
  export type Outbound = TokenFailRequest$Outbound;
}

export function tokenFailRequestToJSON(
  tokenFailRequest: TokenFailRequest,
): string {
  return JSON.stringify(
    TokenFailRequest$outboundSchema.parse(tokenFailRequest),
  );
}

export function tokenFailRequestFromJSON(
  jsonString: string,
): SafeParseResult<TokenFailRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TokenFailRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TokenFailRequest' from JSON`,
  );
}
