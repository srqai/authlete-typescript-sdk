/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type APILBraceserviceIdRBraceGmPropertiesGmAction = {};

/** @internal */
export const APILBraceserviceIdRBraceGmPropertiesGmAction$inboundSchema:
  z.ZodType<
    APILBraceserviceIdRBraceGmPropertiesGmAction,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type APILBraceserviceIdRBraceGmPropertiesGmAction$Outbound = {};

/** @internal */
export const APILBraceserviceIdRBraceGmPropertiesGmAction$outboundSchema:
  z.ZodType<
    APILBraceserviceIdRBraceGmPropertiesGmAction$Outbound,
    z.ZodTypeDef,
    APILBraceserviceIdRBraceGmPropertiesGmAction
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace APILBraceserviceIdRBraceGmPropertiesGmAction$ {
  /** @deprecated use `APILBraceserviceIdRBraceGmPropertiesGmAction$inboundSchema` instead. */
  export const inboundSchema =
    APILBraceserviceIdRBraceGmPropertiesGmAction$inboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceGmPropertiesGmAction$outboundSchema` instead. */
  export const outboundSchema =
    APILBraceserviceIdRBraceGmPropertiesGmAction$outboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceGmPropertiesGmAction$Outbound` instead. */
  export type Outbound = APILBraceserviceIdRBraceGmPropertiesGmAction$Outbound;
}

export function apilBraceserviceIdRBraceGmPropertiesGmActionToJSON(
  apilBraceserviceIdRBraceGmPropertiesGmAction:
    APILBraceserviceIdRBraceGmPropertiesGmAction,
): string {
  return JSON.stringify(
    APILBraceserviceIdRBraceGmPropertiesGmAction$outboundSchema.parse(
      apilBraceserviceIdRBraceGmPropertiesGmAction,
    ),
  );
}

export function apilBraceserviceIdRBraceGmPropertiesGmActionFromJSON(
  jsonString: string,
): SafeParseResult<
  APILBraceserviceIdRBraceGmPropertiesGmAction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      APILBraceserviceIdRBraceGmPropertiesGmAction$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'APILBraceserviceIdRBraceGmPropertiesGmAction' from JSON`,
  );
}
