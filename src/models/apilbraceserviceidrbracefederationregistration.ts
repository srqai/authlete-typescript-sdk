/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type APILBraceserviceIdRBraceFederationRegistration = {};

/** @internal */
export const APILBraceserviceIdRBraceFederationRegistration$inboundSchema:
  z.ZodType<
    APILBraceserviceIdRBraceFederationRegistration,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type APILBraceserviceIdRBraceFederationRegistration$Outbound = {};

/** @internal */
export const APILBraceserviceIdRBraceFederationRegistration$outboundSchema:
  z.ZodType<
    APILBraceserviceIdRBraceFederationRegistration$Outbound,
    z.ZodTypeDef,
    APILBraceserviceIdRBraceFederationRegistration
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace APILBraceserviceIdRBraceFederationRegistration$ {
  /** @deprecated use `APILBraceserviceIdRBraceFederationRegistration$inboundSchema` instead. */
  export const inboundSchema =
    APILBraceserviceIdRBraceFederationRegistration$inboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceFederationRegistration$outboundSchema` instead. */
  export const outboundSchema =
    APILBraceserviceIdRBraceFederationRegistration$outboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceFederationRegistration$Outbound` instead. */
  export type Outbound =
    APILBraceserviceIdRBraceFederationRegistration$Outbound;
}

export function apilBraceserviceIdRBraceFederationRegistrationToJSON(
  apilBraceserviceIdRBraceFederationRegistration:
    APILBraceserviceIdRBraceFederationRegistration,
): string {
  return JSON.stringify(
    APILBraceserviceIdRBraceFederationRegistration$outboundSchema.parse(
      apilBraceserviceIdRBraceFederationRegistration,
    ),
  );
}

export function apilBraceserviceIdRBraceFederationRegistrationFromJSON(
  jsonString: string,
): SafeParseResult<
  APILBraceserviceIdRBraceFederationRegistration,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      APILBraceserviceIdRBraceFederationRegistration$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'APILBraceserviceIdRBraceFederationRegistration' from JSON`,
  );
}
