/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type APILBraceserviceIdRBraceAuthTokenFail = {};

/** @internal */
export const APILBraceserviceIdRBraceAuthTokenFail$inboundSchema: z.ZodType<
  APILBraceserviceIdRBraceAuthTokenFail,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type APILBraceserviceIdRBraceAuthTokenFail$Outbound = {};

/** @internal */
export const APILBraceserviceIdRBraceAuthTokenFail$outboundSchema: z.ZodType<
  APILBraceserviceIdRBraceAuthTokenFail$Outbound,
  z.ZodTypeDef,
  APILBraceserviceIdRBraceAuthTokenFail
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace APILBraceserviceIdRBraceAuthTokenFail$ {
  /** @deprecated use `APILBraceserviceIdRBraceAuthTokenFail$inboundSchema` instead. */
  export const inboundSchema =
    APILBraceserviceIdRBraceAuthTokenFail$inboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceAuthTokenFail$outboundSchema` instead. */
  export const outboundSchema =
    APILBraceserviceIdRBraceAuthTokenFail$outboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceAuthTokenFail$Outbound` instead. */
  export type Outbound = APILBraceserviceIdRBraceAuthTokenFail$Outbound;
}

export function apilBraceserviceIdRBraceAuthTokenFailToJSON(
  apilBraceserviceIdRBraceAuthTokenFail: APILBraceserviceIdRBraceAuthTokenFail,
): string {
  return JSON.stringify(
    APILBraceserviceIdRBraceAuthTokenFail$outboundSchema.parse(
      apilBraceserviceIdRBraceAuthTokenFail,
    ),
  );
}

export function apilBraceserviceIdRBraceAuthTokenFailFromJSON(
  jsonString: string,
): SafeParseResult<APILBraceserviceIdRBraceAuthTokenFail, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      APILBraceserviceIdRBraceAuthTokenFail$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'APILBraceserviceIdRBraceAuthTokenFail' from JSON`,
  );
}
