/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type TokenCreateRequest = {};

/** @internal */
export const TokenCreateRequest$inboundSchema: z.ZodType<
  TokenCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type TokenCreateRequest$Outbound = {};

/** @internal */
export const TokenCreateRequest$outboundSchema: z.ZodType<
  TokenCreateRequest$Outbound,
  z.ZodTypeDef,
  TokenCreateRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TokenCreateRequest$ {
  /** @deprecated use `TokenCreateRequest$inboundSchema` instead. */
  export const inboundSchema = TokenCreateRequest$inboundSchema;
  /** @deprecated use `TokenCreateRequest$outboundSchema` instead. */
  export const outboundSchema = TokenCreateRequest$outboundSchema;
  /** @deprecated use `TokenCreateRequest$Outbound` instead. */
  export type Outbound = TokenCreateRequest$Outbound;
}

export function tokenCreateRequestToJSON(
  tokenCreateRequest: TokenCreateRequest,
): string {
  return JSON.stringify(
    TokenCreateRequest$outboundSchema.parse(tokenCreateRequest),
  );
}

export function tokenCreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<TokenCreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TokenCreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TokenCreateRequest' from JSON`,
  );
}
