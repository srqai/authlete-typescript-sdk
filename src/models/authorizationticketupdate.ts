/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type AuthorizationTicketUpdate = {};

/** @internal */
export const AuthorizationTicketUpdate$inboundSchema: z.ZodType<
  AuthorizationTicketUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type AuthorizationTicketUpdate$Outbound = {};

/** @internal */
export const AuthorizationTicketUpdate$outboundSchema: z.ZodType<
  AuthorizationTicketUpdate$Outbound,
  z.ZodTypeDef,
  AuthorizationTicketUpdate
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthorizationTicketUpdate$ {
  /** @deprecated use `AuthorizationTicketUpdate$inboundSchema` instead. */
  export const inboundSchema = AuthorizationTicketUpdate$inboundSchema;
  /** @deprecated use `AuthorizationTicketUpdate$outboundSchema` instead. */
  export const outboundSchema = AuthorizationTicketUpdate$outboundSchema;
  /** @deprecated use `AuthorizationTicketUpdate$Outbound` instead. */
  export type Outbound = AuthorizationTicketUpdate$Outbound;
}

export function authorizationTicketUpdateToJSON(
  authorizationTicketUpdate: AuthorizationTicketUpdate,
): string {
  return JSON.stringify(
    AuthorizationTicketUpdate$outboundSchema.parse(authorizationTicketUpdate),
  );
}

export function authorizationTicketUpdateFromJSON(
  jsonString: string,
): SafeParseResult<AuthorizationTicketUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AuthorizationTicketUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AuthorizationTicketUpdate' from JSON`,
  );
}
