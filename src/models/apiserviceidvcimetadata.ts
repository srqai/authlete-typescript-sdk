/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * An object containing api_serviceid_vci_metadata data
 */
export type ApiServiceIdVciMetadata = {
  /**
   * The flag indicating whether the metadata is written in the pretty
   *
   * @remarks
   * format or not.
   */
  pretty: boolean;
};

/** @internal */
export const ApiServiceIdVciMetadata$inboundSchema: z.ZodType<
  ApiServiceIdVciMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  pretty: z.boolean(),
});

/** @internal */
export type ApiServiceIdVciMetadata$Outbound = {
  pretty: boolean;
};

/** @internal */
export const ApiServiceIdVciMetadata$outboundSchema: z.ZodType<
  ApiServiceIdVciMetadata$Outbound,
  z.ZodTypeDef,
  ApiServiceIdVciMetadata
> = z.object({
  pretty: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiServiceIdVciMetadata$ {
  /** @deprecated use `ApiServiceIdVciMetadata$inboundSchema` instead. */
  export const inboundSchema = ApiServiceIdVciMetadata$inboundSchema;
  /** @deprecated use `ApiServiceIdVciMetadata$outboundSchema` instead. */
  export const outboundSchema = ApiServiceIdVciMetadata$outboundSchema;
  /** @deprecated use `ApiServiceIdVciMetadata$Outbound` instead. */
  export type Outbound = ApiServiceIdVciMetadata$Outbound;
}

export function apiServiceIdVciMetadataToJSON(
  apiServiceIdVciMetadata: ApiServiceIdVciMetadata,
): string {
  return JSON.stringify(
    ApiServiceIdVciMetadata$outboundSchema.parse(apiServiceIdVciMetadata),
  );
}

export function apiServiceIdVciMetadataFromJSON(
  jsonString: string,
): SafeParseResult<ApiServiceIdVciMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApiServiceIdVciMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiServiceIdVciMetadata' from JSON`,
  );
}
