/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type VciJwtIssuerRequest = {};

/** @internal */
export const VciJwtIssuerRequest$inboundSchema: z.ZodType<
  VciJwtIssuerRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type VciJwtIssuerRequest$Outbound = {};

/** @internal */
export const VciJwtIssuerRequest$outboundSchema: z.ZodType<
  VciJwtIssuerRequest$Outbound,
  z.ZodTypeDef,
  VciJwtIssuerRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciJwtIssuerRequest$ {
  /** @deprecated use `VciJwtIssuerRequest$inboundSchema` instead. */
  export const inboundSchema = VciJwtIssuerRequest$inboundSchema;
  /** @deprecated use `VciJwtIssuerRequest$outboundSchema` instead. */
  export const outboundSchema = VciJwtIssuerRequest$outboundSchema;
  /** @deprecated use `VciJwtIssuerRequest$Outbound` instead. */
  export type Outbound = VciJwtIssuerRequest$Outbound;
}

export function vciJwtIssuerRequestToJSON(
  vciJwtIssuerRequest: VciJwtIssuerRequest,
): string {
  return JSON.stringify(
    VciJwtIssuerRequest$outboundSchema.parse(vciJwtIssuerRequest),
  );
}

export function vciJwtIssuerRequestFromJSON(
  jsonString: string,
): SafeParseResult<VciJwtIssuerRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciJwtIssuerRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciJwtIssuerRequest' from JSON`,
  );
}
