/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * An object containing api_serviceid_device_verification data
 */
export type ApiServiceIdDeviceVerification = {
  /**
   * A user code.
   *
   * @remarks
   */
  userCode: string;
};

/** @internal */
export const ApiServiceIdDeviceVerification$inboundSchema: z.ZodType<
  ApiServiceIdDeviceVerification,
  z.ZodTypeDef,
  unknown
> = z.object({
  userCode: z.string(),
});

/** @internal */
export type ApiServiceIdDeviceVerification$Outbound = {
  userCode: string;
};

/** @internal */
export const ApiServiceIdDeviceVerification$outboundSchema: z.ZodType<
  ApiServiceIdDeviceVerification$Outbound,
  z.ZodTypeDef,
  ApiServiceIdDeviceVerification
> = z.object({
  userCode: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiServiceIdDeviceVerification$ {
  /** @deprecated use `ApiServiceIdDeviceVerification$inboundSchema` instead. */
  export const inboundSchema = ApiServiceIdDeviceVerification$inboundSchema;
  /** @deprecated use `ApiServiceIdDeviceVerification$outboundSchema` instead. */
  export const outboundSchema = ApiServiceIdDeviceVerification$outboundSchema;
  /** @deprecated use `ApiServiceIdDeviceVerification$Outbound` instead. */
  export type Outbound = ApiServiceIdDeviceVerification$Outbound;
}

export function apiServiceIdDeviceVerificationToJSON(
  apiServiceIdDeviceVerification: ApiServiceIdDeviceVerification,
): string {
  return JSON.stringify(
    ApiServiceIdDeviceVerification$outboundSchema.parse(
      apiServiceIdDeviceVerification,
    ),
  );
}

export function apiServiceIdDeviceVerificationFromJSON(
  jsonString: string,
): SafeParseResult<ApiServiceIdDeviceVerification, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApiServiceIdDeviceVerification$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiServiceIdDeviceVerification' from JSON`,
  );
}
