/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type TokenResponse = {};

/** @internal */
export const TokenResponse$inboundSchema: z.ZodType<
  TokenResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type TokenResponse$Outbound = {};

/** @internal */
export const TokenResponse$outboundSchema: z.ZodType<
  TokenResponse$Outbound,
  z.ZodTypeDef,
  TokenResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TokenResponse$ {
  /** @deprecated use `TokenResponse$inboundSchema` instead. */
  export const inboundSchema = TokenResponse$inboundSchema;
  /** @deprecated use `TokenResponse$outboundSchema` instead. */
  export const outboundSchema = TokenResponse$outboundSchema;
  /** @deprecated use `TokenResponse$Outbound` instead. */
  export type Outbound = TokenResponse$Outbound;
}

export function tokenResponseToJSON(tokenResponse: TokenResponse): string {
  return JSON.stringify(TokenResponse$outboundSchema.parse(tokenResponse));
}

export function tokenResponseFromJSON(
  jsonString: string,
): SafeParseResult<TokenResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TokenResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TokenResponse' from JSON`,
  );
}
