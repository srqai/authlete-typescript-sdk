/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type IntrospectionRequest = {};

/** @internal */
export const IntrospectionRequest$inboundSchema: z.ZodType<
  IntrospectionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type IntrospectionRequest$Outbound = {};

/** @internal */
export const IntrospectionRequest$outboundSchema: z.ZodType<
  IntrospectionRequest$Outbound,
  z.ZodTypeDef,
  IntrospectionRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IntrospectionRequest$ {
  /** @deprecated use `IntrospectionRequest$inboundSchema` instead. */
  export const inboundSchema = IntrospectionRequest$inboundSchema;
  /** @deprecated use `IntrospectionRequest$outboundSchema` instead. */
  export const outboundSchema = IntrospectionRequest$outboundSchema;
  /** @deprecated use `IntrospectionRequest$Outbound` instead. */
  export type Outbound = IntrospectionRequest$Outbound;
}

export function introspectionRequestToJSON(
  introspectionRequest: IntrospectionRequest,
): string {
  return JSON.stringify(
    IntrospectionRequest$outboundSchema.parse(introspectionRequest),
  );
}

export function introspectionRequestFromJSON(
  jsonString: string,
): SafeParseResult<IntrospectionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IntrospectionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IntrospectionRequest' from JSON`,
  );
}
