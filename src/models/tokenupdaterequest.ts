/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type TokenUpdateRequest = {};

/** @internal */
export const TokenUpdateRequest$inboundSchema: z.ZodType<
  TokenUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type TokenUpdateRequest$Outbound = {};

/** @internal */
export const TokenUpdateRequest$outboundSchema: z.ZodType<
  TokenUpdateRequest$Outbound,
  z.ZodTypeDef,
  TokenUpdateRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TokenUpdateRequest$ {
  /** @deprecated use `TokenUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = TokenUpdateRequest$inboundSchema;
  /** @deprecated use `TokenUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = TokenUpdateRequest$outboundSchema;
  /** @deprecated use `TokenUpdateRequest$Outbound` instead. */
  export type Outbound = TokenUpdateRequest$Outbound;
}

export function tokenUpdateRequestToJSON(
  tokenUpdateRequest: TokenUpdateRequest,
): string {
  return JSON.stringify(
    TokenUpdateRequest$outboundSchema.parse(tokenUpdateRequest),
  );
}

export function tokenUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<TokenUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TokenUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TokenUpdateRequest' from JSON`,
  );
}
