/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type HskGetListApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
};

/**
 * Result of the API call
 */
export const HskGetListApiAction = {
  InternalServerError: "INTERNAL_SERVER_ERROR",
  BadRequest: "BAD_REQUEST",
  Created: "CREATED",
  Unauthorized: "UNAUTHORIZED",
  Forbidden: "FORBIDDEN",
  Json: "JSON",
  Jwt: "JWT",
  Ok: "OK",
} as const;
/**
 * Result of the API call
 */
export type HskGetListApiAction = ClosedEnum<typeof HskGetListApiAction>;

/**
 * An object containing schema data
 */
export type HskGetListApiResponse = {
  /**
   * The code which represents the result of the API call.
   */
  resultCode?: string | undefined;
  /**
   * A short message which explains the result of the API call.
   */
  resultMessage?: string | undefined;
  /**
   * Result of the API call
   */
  action?: HskGetListApiAction | undefined;
  /**
   * List of HSK
   */
  hsks?: Array<models.Hsk> | undefined;
};

/** @internal */
export const HskGetListApiRequest$inboundSchema: z.ZodType<
  HskGetListApiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
});

/** @internal */
export type HskGetListApiRequest$Outbound = {
  serviceId: string;
};

/** @internal */
export const HskGetListApiRequest$outboundSchema: z.ZodType<
  HskGetListApiRequest$Outbound,
  z.ZodTypeDef,
  HskGetListApiRequest
> = z.object({
  serviceId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HskGetListApiRequest$ {
  /** @deprecated use `HskGetListApiRequest$inboundSchema` instead. */
  export const inboundSchema = HskGetListApiRequest$inboundSchema;
  /** @deprecated use `HskGetListApiRequest$outboundSchema` instead. */
  export const outboundSchema = HskGetListApiRequest$outboundSchema;
  /** @deprecated use `HskGetListApiRequest$Outbound` instead. */
  export type Outbound = HskGetListApiRequest$Outbound;
}

export function hskGetListApiRequestToJSON(
  hskGetListApiRequest: HskGetListApiRequest,
): string {
  return JSON.stringify(
    HskGetListApiRequest$outboundSchema.parse(hskGetListApiRequest),
  );
}

export function hskGetListApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<HskGetListApiRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HskGetListApiRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HskGetListApiRequest' from JSON`,
  );
}

/** @internal */
export const HskGetListApiAction$inboundSchema: z.ZodNativeEnum<
  typeof HskGetListApiAction
> = z.nativeEnum(HskGetListApiAction);

/** @internal */
export const HskGetListApiAction$outboundSchema: z.ZodNativeEnum<
  typeof HskGetListApiAction
> = HskGetListApiAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HskGetListApiAction$ {
  /** @deprecated use `HskGetListApiAction$inboundSchema` instead. */
  export const inboundSchema = HskGetListApiAction$inboundSchema;
  /** @deprecated use `HskGetListApiAction$outboundSchema` instead. */
  export const outboundSchema = HskGetListApiAction$outboundSchema;
}

/** @internal */
export const HskGetListApiResponse$inboundSchema: z.ZodType<
  HskGetListApiResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: HskGetListApiAction$inboundSchema.optional(),
  hsks: z.array(models.Hsk$inboundSchema).optional(),
});

/** @internal */
export type HskGetListApiResponse$Outbound = {
  resultCode?: string | undefined;
  resultMessage?: string | undefined;
  action?: string | undefined;
  hsks?: Array<models.Hsk$Outbound> | undefined;
};

/** @internal */
export const HskGetListApiResponse$outboundSchema: z.ZodType<
  HskGetListApiResponse$Outbound,
  z.ZodTypeDef,
  HskGetListApiResponse
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: HskGetListApiAction$outboundSchema.optional(),
  hsks: z.array(models.Hsk$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HskGetListApiResponse$ {
  /** @deprecated use `HskGetListApiResponse$inboundSchema` instead. */
  export const inboundSchema = HskGetListApiResponse$inboundSchema;
  /** @deprecated use `HskGetListApiResponse$outboundSchema` instead. */
  export const outboundSchema = HskGetListApiResponse$outboundSchema;
  /** @deprecated use `HskGetListApiResponse$Outbound` instead. */
  export type Outbound = HskGetListApiResponse$Outbound;
}

export function hskGetListApiResponseToJSON(
  hskGetListApiResponse: HskGetListApiResponse,
): string {
  return JSON.stringify(
    HskGetListApiResponse$outboundSchema.parse(hskGetListApiResponse),
  );
}

export function hskGetListApiResponseFromJSON(
  jsonString: string,
): SafeParseResult<HskGetListApiResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HskGetListApiResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HskGetListApiResponse' from JSON`,
  );
}
