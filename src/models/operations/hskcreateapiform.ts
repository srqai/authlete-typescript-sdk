/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type HskCreateApiFormRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  apilBraceserviceIdRBraceHskCreate: models.APILBraceserviceIdRBraceHskCreate;
};

/**
 * Result of the API call
 */
export const HskCreateApiFormAction = {
  Success: "SUCCESS",
  InvalidRequest: "INVALID_REQUEST",
  NotFound: "NOT_FOUND",
  ServerError: "SERVER_ERROR",
} as const;
/**
 * Result of the API call
 */
export type HskCreateApiFormAction = ClosedEnum<typeof HskCreateApiFormAction>;

export type HskCreateApiFormResponse = {
  /**
   * The code which represents the result of the API call.
   */
  resultCode?: string | undefined;
  /**
   * A short message which explains the result of the API call.
   */
  resultMessage?: string | undefined;
  /**
   * Result of the API call
   */
  action?: HskCreateApiFormAction | undefined;
  /**
   * Holds information about a key managed in an HSM (Hardware Security Module)
   *
   * @remarks
   */
  hsk?: models.Hsk | undefined;
};

/** @internal */
export const HskCreateApiFormRequest$inboundSchema: z.ZodType<
  HskCreateApiFormRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
  APILBraceserviceIdRBraceHskCreate:
    models.APILBraceserviceIdRBraceHskCreate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "APILBraceserviceIdRBraceHskCreate": "apilBraceserviceIdRBraceHskCreate",
  });
});

/** @internal */
export type HskCreateApiFormRequest$Outbound = {
  serviceId: string;
  APILBraceserviceIdRBraceHskCreate:
    models.APILBraceserviceIdRBraceHskCreate$Outbound;
};

/** @internal */
export const HskCreateApiFormRequest$outboundSchema: z.ZodType<
  HskCreateApiFormRequest$Outbound,
  z.ZodTypeDef,
  HskCreateApiFormRequest
> = z.object({
  serviceId: z.string(),
  apilBraceserviceIdRBraceHskCreate:
    models.APILBraceserviceIdRBraceHskCreate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    apilBraceserviceIdRBraceHskCreate: "APILBraceserviceIdRBraceHskCreate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HskCreateApiFormRequest$ {
  /** @deprecated use `HskCreateApiFormRequest$inboundSchema` instead. */
  export const inboundSchema = HskCreateApiFormRequest$inboundSchema;
  /** @deprecated use `HskCreateApiFormRequest$outboundSchema` instead. */
  export const outboundSchema = HskCreateApiFormRequest$outboundSchema;
  /** @deprecated use `HskCreateApiFormRequest$Outbound` instead. */
  export type Outbound = HskCreateApiFormRequest$Outbound;
}

export function hskCreateApiFormRequestToJSON(
  hskCreateApiFormRequest: HskCreateApiFormRequest,
): string {
  return JSON.stringify(
    HskCreateApiFormRequest$outboundSchema.parse(hskCreateApiFormRequest),
  );
}

export function hskCreateApiFormRequestFromJSON(
  jsonString: string,
): SafeParseResult<HskCreateApiFormRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HskCreateApiFormRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HskCreateApiFormRequest' from JSON`,
  );
}

/** @internal */
export const HskCreateApiFormAction$inboundSchema: z.ZodNativeEnum<
  typeof HskCreateApiFormAction
> = z.nativeEnum(HskCreateApiFormAction);

/** @internal */
export const HskCreateApiFormAction$outboundSchema: z.ZodNativeEnum<
  typeof HskCreateApiFormAction
> = HskCreateApiFormAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HskCreateApiFormAction$ {
  /** @deprecated use `HskCreateApiFormAction$inboundSchema` instead. */
  export const inboundSchema = HskCreateApiFormAction$inboundSchema;
  /** @deprecated use `HskCreateApiFormAction$outboundSchema` instead. */
  export const outboundSchema = HskCreateApiFormAction$outboundSchema;
}

/** @internal */
export const HskCreateApiFormResponse$inboundSchema: z.ZodType<
  HskCreateApiFormResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: HskCreateApiFormAction$inboundSchema.optional(),
  hsk: models.Hsk$inboundSchema.optional(),
});

/** @internal */
export type HskCreateApiFormResponse$Outbound = {
  resultCode?: string | undefined;
  resultMessage?: string | undefined;
  action?: string | undefined;
  hsk?: models.Hsk$Outbound | undefined;
};

/** @internal */
export const HskCreateApiFormResponse$outboundSchema: z.ZodType<
  HskCreateApiFormResponse$Outbound,
  z.ZodTypeDef,
  HskCreateApiFormResponse
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: HskCreateApiFormAction$outboundSchema.optional(),
  hsk: models.Hsk$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HskCreateApiFormResponse$ {
  /** @deprecated use `HskCreateApiFormResponse$inboundSchema` instead. */
  export const inboundSchema = HskCreateApiFormResponse$inboundSchema;
  /** @deprecated use `HskCreateApiFormResponse$outboundSchema` instead. */
  export const outboundSchema = HskCreateApiFormResponse$outboundSchema;
  /** @deprecated use `HskCreateApiFormResponse$Outbound` instead. */
  export type Outbound = HskCreateApiFormResponse$Outbound;
}

export function hskCreateApiFormResponseToJSON(
  hskCreateApiFormResponse: HskCreateApiFormResponse,
): string {
  return JSON.stringify(
    HskCreateApiFormResponse$outboundSchema.parse(hskCreateApiFormResponse),
  );
}

export function hskCreateApiFormResponseFromJSON(
  jsonString: string,
): SafeParseResult<HskCreateApiFormResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HskCreateApiFormResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HskCreateApiFormResponse' from JSON`,
  );
}
