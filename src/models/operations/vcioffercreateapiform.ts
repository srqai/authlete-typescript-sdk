/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type VciOfferCreateApiFormRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  apilBraceserviceIdRBraceVciOfferCreate:
    models.APILBraceserviceIdRBraceVciOfferCreate;
};

/**
 * The result of the `/vci/offer/create` API call.
 */
export const VciOfferCreateApiFormAction = {
  Created: "CREATED",
  Forbidden: "FORBIDDEN",
  CallerError: "CALLER_ERROR",
  AuthleteError: "AUTHLETE_ERROR",
} as const;
/**
 * The result of the `/vci/offer/create` API call.
 */
export type VciOfferCreateApiFormAction = ClosedEnum<
  typeof VciOfferCreateApiFormAction
>;

export type VciOfferCreateApiFormResponse = {
  /**
   * The code which represents the result of the API call.
   */
  resultCode?: string | undefined;
  /**
   * A short message which explains the result of the API call.
   */
  resultMessage?: string | undefined;
  /**
   * The result of the `/vci/offer/create` API call.
   */
  action?: VciOfferCreateApiFormAction | undefined;
  info?: models.CredentialOfferInfo | undefined;
};

/** @internal */
export const VciOfferCreateApiFormRequest$inboundSchema: z.ZodType<
  VciOfferCreateApiFormRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
  APILBraceserviceIdRBraceVciOfferCreate:
    models.APILBraceserviceIdRBraceVciOfferCreate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "APILBraceserviceIdRBraceVciOfferCreate":
      "apilBraceserviceIdRBraceVciOfferCreate",
  });
});

/** @internal */
export type VciOfferCreateApiFormRequest$Outbound = {
  serviceId: string;
  APILBraceserviceIdRBraceVciOfferCreate:
    models.APILBraceserviceIdRBraceVciOfferCreate$Outbound;
};

/** @internal */
export const VciOfferCreateApiFormRequest$outboundSchema: z.ZodType<
  VciOfferCreateApiFormRequest$Outbound,
  z.ZodTypeDef,
  VciOfferCreateApiFormRequest
> = z.object({
  serviceId: z.string(),
  apilBraceserviceIdRBraceVciOfferCreate:
    models.APILBraceserviceIdRBraceVciOfferCreate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    apilBraceserviceIdRBraceVciOfferCreate:
      "APILBraceserviceIdRBraceVciOfferCreate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferCreateApiFormRequest$ {
  /** @deprecated use `VciOfferCreateApiFormRequest$inboundSchema` instead. */
  export const inboundSchema = VciOfferCreateApiFormRequest$inboundSchema;
  /** @deprecated use `VciOfferCreateApiFormRequest$outboundSchema` instead. */
  export const outboundSchema = VciOfferCreateApiFormRequest$outboundSchema;
  /** @deprecated use `VciOfferCreateApiFormRequest$Outbound` instead. */
  export type Outbound = VciOfferCreateApiFormRequest$Outbound;
}

export function vciOfferCreateApiFormRequestToJSON(
  vciOfferCreateApiFormRequest: VciOfferCreateApiFormRequest,
): string {
  return JSON.stringify(
    VciOfferCreateApiFormRequest$outboundSchema.parse(
      vciOfferCreateApiFormRequest,
    ),
  );
}

export function vciOfferCreateApiFormRequestFromJSON(
  jsonString: string,
): SafeParseResult<VciOfferCreateApiFormRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciOfferCreateApiFormRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciOfferCreateApiFormRequest' from JSON`,
  );
}

/** @internal */
export const VciOfferCreateApiFormAction$inboundSchema: z.ZodNativeEnum<
  typeof VciOfferCreateApiFormAction
> = z.nativeEnum(VciOfferCreateApiFormAction);

/** @internal */
export const VciOfferCreateApiFormAction$outboundSchema: z.ZodNativeEnum<
  typeof VciOfferCreateApiFormAction
> = VciOfferCreateApiFormAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferCreateApiFormAction$ {
  /** @deprecated use `VciOfferCreateApiFormAction$inboundSchema` instead. */
  export const inboundSchema = VciOfferCreateApiFormAction$inboundSchema;
  /** @deprecated use `VciOfferCreateApiFormAction$outboundSchema` instead. */
  export const outboundSchema = VciOfferCreateApiFormAction$outboundSchema;
}

/** @internal */
export const VciOfferCreateApiFormResponse$inboundSchema: z.ZodType<
  VciOfferCreateApiFormResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: VciOfferCreateApiFormAction$inboundSchema.optional(),
  info: models.CredentialOfferInfo$inboundSchema.optional(),
});

/** @internal */
export type VciOfferCreateApiFormResponse$Outbound = {
  resultCode?: string | undefined;
  resultMessage?: string | undefined;
  action?: string | undefined;
  info?: models.CredentialOfferInfo$Outbound | undefined;
};

/** @internal */
export const VciOfferCreateApiFormResponse$outboundSchema: z.ZodType<
  VciOfferCreateApiFormResponse$Outbound,
  z.ZodTypeDef,
  VciOfferCreateApiFormResponse
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: VciOfferCreateApiFormAction$outboundSchema.optional(),
  info: models.CredentialOfferInfo$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferCreateApiFormResponse$ {
  /** @deprecated use `VciOfferCreateApiFormResponse$inboundSchema` instead. */
  export const inboundSchema = VciOfferCreateApiFormResponse$inboundSchema;
  /** @deprecated use `VciOfferCreateApiFormResponse$outboundSchema` instead. */
  export const outboundSchema = VciOfferCreateApiFormResponse$outboundSchema;
  /** @deprecated use `VciOfferCreateApiFormResponse$Outbound` instead. */
  export type Outbound = VciOfferCreateApiFormResponse$Outbound;
}

export function vciOfferCreateApiFormResponseToJSON(
  vciOfferCreateApiFormResponse: VciOfferCreateApiFormResponse,
): string {
  return JSON.stringify(
    VciOfferCreateApiFormResponse$outboundSchema.parse(
      vciOfferCreateApiFormResponse,
    ),
  );
}

export function vciOfferCreateApiFormResponseFromJSON(
  jsonString: string,
): SafeParseResult<VciOfferCreateApiFormResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciOfferCreateApiFormResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciOfferCreateApiFormResponse' from JSON`,
  );
}
