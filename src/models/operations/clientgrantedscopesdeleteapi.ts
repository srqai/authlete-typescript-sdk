/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ClientGrantedScopesDeleteApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  /**
   * A client ID.
   *
   * @remarks
   */
  clientId: string;
  subject: string;
};

/**
 * Successful operation
 */
export type ClientGrantedScopesDeleteApiResponse = {
  /**
   * The code which represents the result of the API call.
   */
  resultCode?: string | undefined;
  /**
   * A short message which explains the result of the API call.
   */
  resultMessage?: string | undefined;
};

/** @internal */
export const ClientGrantedScopesDeleteApiRequest$inboundSchema: z.ZodType<
  ClientGrantedScopesDeleteApiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
  clientId: z.string(),
  subject: z.string(),
});

/** @internal */
export type ClientGrantedScopesDeleteApiRequest$Outbound = {
  serviceId: string;
  clientId: string;
  subject: string;
};

/** @internal */
export const ClientGrantedScopesDeleteApiRequest$outboundSchema: z.ZodType<
  ClientGrantedScopesDeleteApiRequest$Outbound,
  z.ZodTypeDef,
  ClientGrantedScopesDeleteApiRequest
> = z.object({
  serviceId: z.string(),
  clientId: z.string(),
  subject: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientGrantedScopesDeleteApiRequest$ {
  /** @deprecated use `ClientGrantedScopesDeleteApiRequest$inboundSchema` instead. */
  export const inboundSchema =
    ClientGrantedScopesDeleteApiRequest$inboundSchema;
  /** @deprecated use `ClientGrantedScopesDeleteApiRequest$outboundSchema` instead. */
  export const outboundSchema =
    ClientGrantedScopesDeleteApiRequest$outboundSchema;
  /** @deprecated use `ClientGrantedScopesDeleteApiRequest$Outbound` instead. */
  export type Outbound = ClientGrantedScopesDeleteApiRequest$Outbound;
}

export function clientGrantedScopesDeleteApiRequestToJSON(
  clientGrantedScopesDeleteApiRequest: ClientGrantedScopesDeleteApiRequest,
): string {
  return JSON.stringify(
    ClientGrantedScopesDeleteApiRequest$outboundSchema.parse(
      clientGrantedScopesDeleteApiRequest,
    ),
  );
}

export function clientGrantedScopesDeleteApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<ClientGrantedScopesDeleteApiRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ClientGrantedScopesDeleteApiRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ClientGrantedScopesDeleteApiRequest' from JSON`,
  );
}

/** @internal */
export const ClientGrantedScopesDeleteApiResponse$inboundSchema: z.ZodType<
  ClientGrantedScopesDeleteApiResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
});

/** @internal */
export type ClientGrantedScopesDeleteApiResponse$Outbound = {
  resultCode?: string | undefined;
  resultMessage?: string | undefined;
};

/** @internal */
export const ClientGrantedScopesDeleteApiResponse$outboundSchema: z.ZodType<
  ClientGrantedScopesDeleteApiResponse$Outbound,
  z.ZodTypeDef,
  ClientGrantedScopesDeleteApiResponse
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientGrantedScopesDeleteApiResponse$ {
  /** @deprecated use `ClientGrantedScopesDeleteApiResponse$inboundSchema` instead. */
  export const inboundSchema =
    ClientGrantedScopesDeleteApiResponse$inboundSchema;
  /** @deprecated use `ClientGrantedScopesDeleteApiResponse$outboundSchema` instead. */
  export const outboundSchema =
    ClientGrantedScopesDeleteApiResponse$outboundSchema;
  /** @deprecated use `ClientGrantedScopesDeleteApiResponse$Outbound` instead. */
  export type Outbound = ClientGrantedScopesDeleteApiResponse$Outbound;
}

export function clientGrantedScopesDeleteApiResponseToJSON(
  clientGrantedScopesDeleteApiResponse: ClientGrantedScopesDeleteApiResponse,
): string {
  return JSON.stringify(
    ClientGrantedScopesDeleteApiResponse$outboundSchema.parse(
      clientGrantedScopesDeleteApiResponse,
    ),
  );
}

export function clientGrantedScopesDeleteApiResponseFromJSON(
  jsonString: string,
): SafeParseResult<ClientGrantedScopesDeleteApiResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ClientGrantedScopesDeleteApiResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ClientGrantedScopesDeleteApiResponse' from JSON`,
  );
}
