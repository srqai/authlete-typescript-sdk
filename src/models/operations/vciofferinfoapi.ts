/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type VciOfferInfoApiRequestBody = {
  /**
   * The identifier of the credential offer.
   */
  identifier?: string | undefined;
};

export type VciOfferInfoApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  requestBody: VciOfferInfoApiRequestBody;
};

/**
 * The result of the `/vci/offer/info` API call.
 */
export const VciOfferInfoApiAction = {
  Ok: "OK",
  Forbidden: "FORBIDDEN",
  NotFound: "NOT_FOUND",
  CallerError: "CALLER_ERROR",
  AuthleteError: "AUTHLETE_ERROR",
} as const;
/**
 * The result of the `/vci/offer/info` API call.
 */
export type VciOfferInfoApiAction = ClosedEnum<typeof VciOfferInfoApiAction>;

/**
 * Successful operation
 */
export type VciOfferInfoApiResponse = {
  /**
   * The code which represents the result of the API call.
   */
  resultCode?: string | undefined;
  /**
   * A short message which explains the result of the API call.
   */
  resultMessage?: string | undefined;
  /**
   * The result of the `/vci/offer/info` API call.
   */
  action?: VciOfferInfoApiAction | undefined;
  info?: models.CredentialOfferInfo | undefined;
};

/** @internal */
export const VciOfferInfoApiRequestBody$inboundSchema: z.ZodType<
  VciOfferInfoApiRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  identifier: z.string().optional(),
});

/** @internal */
export type VciOfferInfoApiRequestBody$Outbound = {
  identifier?: string | undefined;
};

/** @internal */
export const VciOfferInfoApiRequestBody$outboundSchema: z.ZodType<
  VciOfferInfoApiRequestBody$Outbound,
  z.ZodTypeDef,
  VciOfferInfoApiRequestBody
> = z.object({
  identifier: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferInfoApiRequestBody$ {
  /** @deprecated use `VciOfferInfoApiRequestBody$inboundSchema` instead. */
  export const inboundSchema = VciOfferInfoApiRequestBody$inboundSchema;
  /** @deprecated use `VciOfferInfoApiRequestBody$outboundSchema` instead. */
  export const outboundSchema = VciOfferInfoApiRequestBody$outboundSchema;
  /** @deprecated use `VciOfferInfoApiRequestBody$Outbound` instead. */
  export type Outbound = VciOfferInfoApiRequestBody$Outbound;
}

export function vciOfferInfoApiRequestBodyToJSON(
  vciOfferInfoApiRequestBody: VciOfferInfoApiRequestBody,
): string {
  return JSON.stringify(
    VciOfferInfoApiRequestBody$outboundSchema.parse(vciOfferInfoApiRequestBody),
  );
}

export function vciOfferInfoApiRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<VciOfferInfoApiRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciOfferInfoApiRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciOfferInfoApiRequestBody' from JSON`,
  );
}

/** @internal */
export const VciOfferInfoApiRequest$inboundSchema: z.ZodType<
  VciOfferInfoApiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
  RequestBody: z.lazy(() => VciOfferInfoApiRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type VciOfferInfoApiRequest$Outbound = {
  serviceId: string;
  RequestBody: VciOfferInfoApiRequestBody$Outbound;
};

/** @internal */
export const VciOfferInfoApiRequest$outboundSchema: z.ZodType<
  VciOfferInfoApiRequest$Outbound,
  z.ZodTypeDef,
  VciOfferInfoApiRequest
> = z.object({
  serviceId: z.string(),
  requestBody: z.lazy(() => VciOfferInfoApiRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferInfoApiRequest$ {
  /** @deprecated use `VciOfferInfoApiRequest$inboundSchema` instead. */
  export const inboundSchema = VciOfferInfoApiRequest$inboundSchema;
  /** @deprecated use `VciOfferInfoApiRequest$outboundSchema` instead. */
  export const outboundSchema = VciOfferInfoApiRequest$outboundSchema;
  /** @deprecated use `VciOfferInfoApiRequest$Outbound` instead. */
  export type Outbound = VciOfferInfoApiRequest$Outbound;
}

export function vciOfferInfoApiRequestToJSON(
  vciOfferInfoApiRequest: VciOfferInfoApiRequest,
): string {
  return JSON.stringify(
    VciOfferInfoApiRequest$outboundSchema.parse(vciOfferInfoApiRequest),
  );
}

export function vciOfferInfoApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<VciOfferInfoApiRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciOfferInfoApiRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciOfferInfoApiRequest' from JSON`,
  );
}

/** @internal */
export const VciOfferInfoApiAction$inboundSchema: z.ZodNativeEnum<
  typeof VciOfferInfoApiAction
> = z.nativeEnum(VciOfferInfoApiAction);

/** @internal */
export const VciOfferInfoApiAction$outboundSchema: z.ZodNativeEnum<
  typeof VciOfferInfoApiAction
> = VciOfferInfoApiAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferInfoApiAction$ {
  /** @deprecated use `VciOfferInfoApiAction$inboundSchema` instead. */
  export const inboundSchema = VciOfferInfoApiAction$inboundSchema;
  /** @deprecated use `VciOfferInfoApiAction$outboundSchema` instead. */
  export const outboundSchema = VciOfferInfoApiAction$outboundSchema;
}

/** @internal */
export const VciOfferInfoApiResponse$inboundSchema: z.ZodType<
  VciOfferInfoApiResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: VciOfferInfoApiAction$inboundSchema.optional(),
  info: models.CredentialOfferInfo$inboundSchema.optional(),
});

/** @internal */
export type VciOfferInfoApiResponse$Outbound = {
  resultCode?: string | undefined;
  resultMessage?: string | undefined;
  action?: string | undefined;
  info?: models.CredentialOfferInfo$Outbound | undefined;
};

/** @internal */
export const VciOfferInfoApiResponse$outboundSchema: z.ZodType<
  VciOfferInfoApiResponse$Outbound,
  z.ZodTypeDef,
  VciOfferInfoApiResponse
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: VciOfferInfoApiAction$outboundSchema.optional(),
  info: models.CredentialOfferInfo$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferInfoApiResponse$ {
  /** @deprecated use `VciOfferInfoApiResponse$inboundSchema` instead. */
  export const inboundSchema = VciOfferInfoApiResponse$inboundSchema;
  /** @deprecated use `VciOfferInfoApiResponse$outboundSchema` instead. */
  export const outboundSchema = VciOfferInfoApiResponse$outboundSchema;
  /** @deprecated use `VciOfferInfoApiResponse$Outbound` instead. */
  export type Outbound = VciOfferInfoApiResponse$Outbound;
}

export function vciOfferInfoApiResponseToJSON(
  vciOfferInfoApiResponse: VciOfferInfoApiResponse,
): string {
  return JSON.stringify(
    VciOfferInfoApiResponse$outboundSchema.parse(vciOfferInfoApiResponse),
  );
}

export function vciOfferInfoApiResponseFromJSON(
  jsonString: string,
): SafeParseResult<VciOfferInfoApiResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciOfferInfoApiResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciOfferInfoApiResponse' from JSON`,
  );
}
