/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type VciOfferInfoApiFormRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  apilBraceserviceIdRBraceVciOfferInfo:
    models.APILBraceserviceIdRBraceVciOfferInfo;
};

/**
 * The result of the `/vci/offer/info` API call.
 */
export const VciOfferInfoApiFormAction = {
  Ok: "OK",
  Forbidden: "FORBIDDEN",
  NotFound: "NOT_FOUND",
  CallerError: "CALLER_ERROR",
  AuthleteError: "AUTHLETE_ERROR",
} as const;
/**
 * The result of the `/vci/offer/info` API call.
 */
export type VciOfferInfoApiFormAction = ClosedEnum<
  typeof VciOfferInfoApiFormAction
>;

export type VciOfferInfoApiFormResponse = {
  /**
   * The code which represents the result of the API call.
   */
  resultCode?: string | undefined;
  /**
   * A short message which explains the result of the API call.
   */
  resultMessage?: string | undefined;
  /**
   * The result of the `/vci/offer/info` API call.
   */
  action?: VciOfferInfoApiFormAction | undefined;
  info?: models.CredentialOfferInfo | undefined;
};

/** @internal */
export const VciOfferInfoApiFormRequest$inboundSchema: z.ZodType<
  VciOfferInfoApiFormRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
  APILBraceserviceIdRBraceVciOfferInfo:
    models.APILBraceserviceIdRBraceVciOfferInfo$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "APILBraceserviceIdRBraceVciOfferInfo":
      "apilBraceserviceIdRBraceVciOfferInfo",
  });
});

/** @internal */
export type VciOfferInfoApiFormRequest$Outbound = {
  serviceId: string;
  APILBraceserviceIdRBraceVciOfferInfo:
    models.APILBraceserviceIdRBraceVciOfferInfo$Outbound;
};

/** @internal */
export const VciOfferInfoApiFormRequest$outboundSchema: z.ZodType<
  VciOfferInfoApiFormRequest$Outbound,
  z.ZodTypeDef,
  VciOfferInfoApiFormRequest
> = z.object({
  serviceId: z.string(),
  apilBraceserviceIdRBraceVciOfferInfo:
    models.APILBraceserviceIdRBraceVciOfferInfo$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    apilBraceserviceIdRBraceVciOfferInfo:
      "APILBraceserviceIdRBraceVciOfferInfo",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferInfoApiFormRequest$ {
  /** @deprecated use `VciOfferInfoApiFormRequest$inboundSchema` instead. */
  export const inboundSchema = VciOfferInfoApiFormRequest$inboundSchema;
  /** @deprecated use `VciOfferInfoApiFormRequest$outboundSchema` instead. */
  export const outboundSchema = VciOfferInfoApiFormRequest$outboundSchema;
  /** @deprecated use `VciOfferInfoApiFormRequest$Outbound` instead. */
  export type Outbound = VciOfferInfoApiFormRequest$Outbound;
}

export function vciOfferInfoApiFormRequestToJSON(
  vciOfferInfoApiFormRequest: VciOfferInfoApiFormRequest,
): string {
  return JSON.stringify(
    VciOfferInfoApiFormRequest$outboundSchema.parse(vciOfferInfoApiFormRequest),
  );
}

export function vciOfferInfoApiFormRequestFromJSON(
  jsonString: string,
): SafeParseResult<VciOfferInfoApiFormRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciOfferInfoApiFormRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciOfferInfoApiFormRequest' from JSON`,
  );
}

/** @internal */
export const VciOfferInfoApiFormAction$inboundSchema: z.ZodNativeEnum<
  typeof VciOfferInfoApiFormAction
> = z.nativeEnum(VciOfferInfoApiFormAction);

/** @internal */
export const VciOfferInfoApiFormAction$outboundSchema: z.ZodNativeEnum<
  typeof VciOfferInfoApiFormAction
> = VciOfferInfoApiFormAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferInfoApiFormAction$ {
  /** @deprecated use `VciOfferInfoApiFormAction$inboundSchema` instead. */
  export const inboundSchema = VciOfferInfoApiFormAction$inboundSchema;
  /** @deprecated use `VciOfferInfoApiFormAction$outboundSchema` instead. */
  export const outboundSchema = VciOfferInfoApiFormAction$outboundSchema;
}

/** @internal */
export const VciOfferInfoApiFormResponse$inboundSchema: z.ZodType<
  VciOfferInfoApiFormResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: VciOfferInfoApiFormAction$inboundSchema.optional(),
  info: models.CredentialOfferInfo$inboundSchema.optional(),
});

/** @internal */
export type VciOfferInfoApiFormResponse$Outbound = {
  resultCode?: string | undefined;
  resultMessage?: string | undefined;
  action?: string | undefined;
  info?: models.CredentialOfferInfo$Outbound | undefined;
};

/** @internal */
export const VciOfferInfoApiFormResponse$outboundSchema: z.ZodType<
  VciOfferInfoApiFormResponse$Outbound,
  z.ZodTypeDef,
  VciOfferInfoApiFormResponse
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: VciOfferInfoApiFormAction$outboundSchema.optional(),
  info: models.CredentialOfferInfo$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VciOfferInfoApiFormResponse$ {
  /** @deprecated use `VciOfferInfoApiFormResponse$inboundSchema` instead. */
  export const inboundSchema = VciOfferInfoApiFormResponse$inboundSchema;
  /** @deprecated use `VciOfferInfoApiFormResponse$outboundSchema` instead. */
  export const outboundSchema = VciOfferInfoApiFormResponse$outboundSchema;
  /** @deprecated use `VciOfferInfoApiFormResponse$Outbound` instead. */
  export type Outbound = VciOfferInfoApiFormResponse$Outbound;
}

export function vciOfferInfoApiFormResponseToJSON(
  vciOfferInfoApiFormResponse: VciOfferInfoApiFormResponse,
): string {
  return JSON.stringify(
    VciOfferInfoApiFormResponse$outboundSchema.parse(
      vciOfferInfoApiFormResponse,
    ),
  );
}

export function vciOfferInfoApiFormResponseFromJSON(
  jsonString: string,
): SafeParseResult<VciOfferInfoApiFormResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VciOfferInfoApiFormResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VciOfferInfoApiFormResponse' from JSON`,
  );
}
