/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ClientDeleteApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  /**
   * The client ID.
   */
  clientId: string;
};

/**
 * Response for 204
 */
export type ClientDeleteApiResponse = {};

/** @internal */
export const ClientDeleteApiRequest$inboundSchema: z.ZodType<
  ClientDeleteApiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
  clientId: z.string(),
});

/** @internal */
export type ClientDeleteApiRequest$Outbound = {
  serviceId: string;
  clientId: string;
};

/** @internal */
export const ClientDeleteApiRequest$outboundSchema: z.ZodType<
  ClientDeleteApiRequest$Outbound,
  z.ZodTypeDef,
  ClientDeleteApiRequest
> = z.object({
  serviceId: z.string(),
  clientId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientDeleteApiRequest$ {
  /** @deprecated use `ClientDeleteApiRequest$inboundSchema` instead. */
  export const inboundSchema = ClientDeleteApiRequest$inboundSchema;
  /** @deprecated use `ClientDeleteApiRequest$outboundSchema` instead. */
  export const outboundSchema = ClientDeleteApiRequest$outboundSchema;
  /** @deprecated use `ClientDeleteApiRequest$Outbound` instead. */
  export type Outbound = ClientDeleteApiRequest$Outbound;
}

export function clientDeleteApiRequestToJSON(
  clientDeleteApiRequest: ClientDeleteApiRequest,
): string {
  return JSON.stringify(
    ClientDeleteApiRequest$outboundSchema.parse(clientDeleteApiRequest),
  );
}

export function clientDeleteApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<ClientDeleteApiRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ClientDeleteApiRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ClientDeleteApiRequest' from JSON`,
  );
}

/** @internal */
export const ClientDeleteApiResponse$inboundSchema: z.ZodType<
  ClientDeleteApiResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ClientDeleteApiResponse$Outbound = {};

/** @internal */
export const ClientDeleteApiResponse$outboundSchema: z.ZodType<
  ClientDeleteApiResponse$Outbound,
  z.ZodTypeDef,
  ClientDeleteApiResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientDeleteApiResponse$ {
  /** @deprecated use `ClientDeleteApiResponse$inboundSchema` instead. */
  export const inboundSchema = ClientDeleteApiResponse$inboundSchema;
  /** @deprecated use `ClientDeleteApiResponse$outboundSchema` instead. */
  export const outboundSchema = ClientDeleteApiResponse$outboundSchema;
  /** @deprecated use `ClientDeleteApiResponse$Outbound` instead. */
  export type Outbound = ClientDeleteApiResponse$Outbound;
}

export function clientDeleteApiResponseToJSON(
  clientDeleteApiResponse: ClientDeleteApiResponse,
): string {
  return JSON.stringify(
    ClientDeleteApiResponse$outboundSchema.parse(clientDeleteApiResponse),
  );
}

export function clientDeleteApiResponseFromJSON(
  jsonString: string,
): SafeParseResult<ClientDeleteApiResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ClientDeleteApiResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ClientDeleteApiResponse' from JSON`,
  );
}
