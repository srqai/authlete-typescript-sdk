/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ClientExtensionRequestablesScopesGetApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  /**
   * A client ID.
   *
   * @remarks
   */
  clientId: string;
};

export type ClientExtensionRequestablesScopesGetApiResponse = {
  requestableScopes?: Array<string> | undefined;
};

/** @internal */
export const ClientExtensionRequestablesScopesGetApiRequest$inboundSchema:
  z.ZodType<
    ClientExtensionRequestablesScopesGetApiRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    serviceId: z.string(),
    clientId: z.string(),
  });

/** @internal */
export type ClientExtensionRequestablesScopesGetApiRequest$Outbound = {
  serviceId: string;
  clientId: string;
};

/** @internal */
export const ClientExtensionRequestablesScopesGetApiRequest$outboundSchema:
  z.ZodType<
    ClientExtensionRequestablesScopesGetApiRequest$Outbound,
    z.ZodTypeDef,
    ClientExtensionRequestablesScopesGetApiRequest
  > = z.object({
    serviceId: z.string(),
    clientId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientExtensionRequestablesScopesGetApiRequest$ {
  /** @deprecated use `ClientExtensionRequestablesScopesGetApiRequest$inboundSchema` instead. */
  export const inboundSchema =
    ClientExtensionRequestablesScopesGetApiRequest$inboundSchema;
  /** @deprecated use `ClientExtensionRequestablesScopesGetApiRequest$outboundSchema` instead. */
  export const outboundSchema =
    ClientExtensionRequestablesScopesGetApiRequest$outboundSchema;
  /** @deprecated use `ClientExtensionRequestablesScopesGetApiRequest$Outbound` instead. */
  export type Outbound =
    ClientExtensionRequestablesScopesGetApiRequest$Outbound;
}

export function clientExtensionRequestablesScopesGetApiRequestToJSON(
  clientExtensionRequestablesScopesGetApiRequest:
    ClientExtensionRequestablesScopesGetApiRequest,
): string {
  return JSON.stringify(
    ClientExtensionRequestablesScopesGetApiRequest$outboundSchema.parse(
      clientExtensionRequestablesScopesGetApiRequest,
    ),
  );
}

export function clientExtensionRequestablesScopesGetApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ClientExtensionRequestablesScopesGetApiRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ClientExtensionRequestablesScopesGetApiRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ClientExtensionRequestablesScopesGetApiRequest' from JSON`,
  );
}

/** @internal */
export const ClientExtensionRequestablesScopesGetApiResponse$inboundSchema:
  z.ZodType<
    ClientExtensionRequestablesScopesGetApiResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    requestableScopes: z.array(z.string()).optional(),
  });

/** @internal */
export type ClientExtensionRequestablesScopesGetApiResponse$Outbound = {
  requestableScopes?: Array<string> | undefined;
};

/** @internal */
export const ClientExtensionRequestablesScopesGetApiResponse$outboundSchema:
  z.ZodType<
    ClientExtensionRequestablesScopesGetApiResponse$Outbound,
    z.ZodTypeDef,
    ClientExtensionRequestablesScopesGetApiResponse
  > = z.object({
    requestableScopes: z.array(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientExtensionRequestablesScopesGetApiResponse$ {
  /** @deprecated use `ClientExtensionRequestablesScopesGetApiResponse$inboundSchema` instead. */
  export const inboundSchema =
    ClientExtensionRequestablesScopesGetApiResponse$inboundSchema;
  /** @deprecated use `ClientExtensionRequestablesScopesGetApiResponse$outboundSchema` instead. */
  export const outboundSchema =
    ClientExtensionRequestablesScopesGetApiResponse$outboundSchema;
  /** @deprecated use `ClientExtensionRequestablesScopesGetApiResponse$Outbound` instead. */
  export type Outbound =
    ClientExtensionRequestablesScopesGetApiResponse$Outbound;
}

export function clientExtensionRequestablesScopesGetApiResponseToJSON(
  clientExtensionRequestablesScopesGetApiResponse:
    ClientExtensionRequestablesScopesGetApiResponse,
): string {
  return JSON.stringify(
    ClientExtensionRequestablesScopesGetApiResponse$outboundSchema.parse(
      clientExtensionRequestablesScopesGetApiResponse,
    ),
  );
}

export function clientExtensionRequestablesScopesGetApiResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  ClientExtensionRequestablesScopesGetApiResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ClientExtensionRequestablesScopesGetApiResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ClientExtensionRequestablesScopesGetApiResponse' from JSON`,
  );
}
