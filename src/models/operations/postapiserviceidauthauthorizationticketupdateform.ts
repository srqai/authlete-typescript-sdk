/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest = {
  serviceId: string;
  authorizationTicketUpdate: models.AuthorizationTicketUpdate;
};

/**
 * The result of the /auth/authorization/ticket/info API call.
 */
export const PostApiServiceIdAuthAuthorizationTicketUpdateFormAction = {
  Ok: "OK",
  NotFound: "NOT_FOUND",
  CallerError: "CALLER_ERROR",
  AuthleteError: "AUTHLETE_ERROR",
} as const;
/**
 * The result of the /auth/authorization/ticket/info API call.
 */
export type PostApiServiceIdAuthAuthorizationTicketUpdateFormAction =
  ClosedEnum<typeof PostApiServiceIdAuthAuthorizationTicketUpdateFormAction>;

/**
 * Successful operation
 */
export type PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse = {
  /**
   * Information about the ticket.
   */
  info?: string | undefined;
  /**
   * The result of the /auth/authorization/ticket/info API call.
   */
  action?: PostApiServiceIdAuthAuthorizationTicketUpdateFormAction | undefined;
  /**
   * The code which represents the result of the API call.
   */
  resultCode?: string | undefined;
  /**
   * A short message which explains the result of the API call.
   */
  resultMessage?: string | undefined;
};

/** @internal */
export const PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest$inboundSchema:
  z.ZodType<
    PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    serviceId: z.string(),
    AuthorizationTicketUpdate: models.AuthorizationTicketUpdate$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "AuthorizationTicketUpdate": "authorizationTicketUpdate",
    });
  });

/** @internal */
export type PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest$Outbound =
  {
    serviceId: string;
    AuthorizationTicketUpdate: models.AuthorizationTicketUpdate$Outbound;
  };

/** @internal */
export const PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest$outboundSchema:
  z.ZodType<
    PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest$Outbound,
    z.ZodTypeDef,
    PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest
  > = z.object({
    serviceId: z.string(),
    authorizationTicketUpdate: models.AuthorizationTicketUpdate$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      authorizationTicketUpdate: "AuthorizationTicketUpdate",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest$ {
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest$inboundSchema;
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest$outboundSchema;
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest$Outbound` instead. */
  export type Outbound =
    PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest$Outbound;
}

export function postApiServiceIdAuthAuthorizationTicketUpdateFormRequestToJSON(
  postApiServiceIdAuthAuthorizationTicketUpdateFormRequest:
    PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest,
): string {
  return JSON.stringify(
    PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest$outboundSchema
      .parse(postApiServiceIdAuthAuthorizationTicketUpdateFormRequest),
  );
}

export function postApiServiceIdAuthAuthorizationTicketUpdateFormRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiServiceIdAuthAuthorizationTicketUpdateFormRequest' from JSON`,
  );
}

/** @internal */
export const PostApiServiceIdAuthAuthorizationTicketUpdateFormAction$inboundSchema:
  z.ZodNativeEnum<
    typeof PostApiServiceIdAuthAuthorizationTicketUpdateFormAction
  > = z.nativeEnum(PostApiServiceIdAuthAuthorizationTicketUpdateFormAction);

/** @internal */
export const PostApiServiceIdAuthAuthorizationTicketUpdateFormAction$outboundSchema:
  z.ZodNativeEnum<
    typeof PostApiServiceIdAuthAuthorizationTicketUpdateFormAction
  > = PostApiServiceIdAuthAuthorizationTicketUpdateFormAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiServiceIdAuthAuthorizationTicketUpdateFormAction$ {
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateFormAction$inboundSchema` instead. */
  export const inboundSchema =
    PostApiServiceIdAuthAuthorizationTicketUpdateFormAction$inboundSchema;
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateFormAction$outboundSchema` instead. */
  export const outboundSchema =
    PostApiServiceIdAuthAuthorizationTicketUpdateFormAction$outboundSchema;
}

/** @internal */
export const PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse$inboundSchema:
  z.ZodType<
    PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    info: z.string().optional(),
    action:
      PostApiServiceIdAuthAuthorizationTicketUpdateFormAction$inboundSchema
        .optional(),
    resultCode: z.string().optional(),
    resultMessage: z.string().optional(),
  });

/** @internal */
export type PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse$Outbound =
  {
    info?: string | undefined;
    action?: string | undefined;
    resultCode?: string | undefined;
    resultMessage?: string | undefined;
  };

/** @internal */
export const PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse$outboundSchema:
  z.ZodType<
    PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse$Outbound,
    z.ZodTypeDef,
    PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse
  > = z.object({
    info: z.string().optional(),
    action:
      PostApiServiceIdAuthAuthorizationTicketUpdateFormAction$outboundSchema
        .optional(),
    resultCode: z.string().optional(),
    resultMessage: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse$ {
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse$inboundSchema` instead. */
  export const inboundSchema =
    PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse$inboundSchema;
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse$outboundSchema` instead. */
  export const outboundSchema =
    PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse$outboundSchema;
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse$Outbound` instead. */
  export type Outbound =
    PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse$Outbound;
}

export function postApiServiceIdAuthAuthorizationTicketUpdateFormResponseToJSON(
  postApiServiceIdAuthAuthorizationTicketUpdateFormResponse:
    PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse,
): string {
  return JSON.stringify(
    PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse$outboundSchema
      .parse(postApiServiceIdAuthAuthorizationTicketUpdateFormResponse),
  );
}

export function postApiServiceIdAuthAuthorizationTicketUpdateFormResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiServiceIdAuthAuthorizationTicketUpdateFormResponse' from JSON`,
  );
}
