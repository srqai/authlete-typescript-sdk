/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiServiceIdAuthAuthorizationTicketInfoRequest = {
  serviceId: string;
  /**
   * Ticket issued by `/auth/authorization`.
   */
  ticket: string;
};

/**
 * The result of the `/auth/authorization/ticket/info` API call.
 */
export const GetApiServiceIdAuthAuthorizationTicketInfoAction = {
  Ok: "OK",
  NotFound: "NOT_FOUND",
  CallerError: "CALLER_ERROR",
  AuthleteError: "AUTHLETE_ERROR",
} as const;
/**
 * The result of the `/auth/authorization/ticket/info` API call.
 */
export type GetApiServiceIdAuthAuthorizationTicketInfoAction = ClosedEnum<
  typeof GetApiServiceIdAuthAuthorizationTicketInfoAction
>;

export type GetApiServiceIdAuthAuthorizationTicketInfoResponse = {
  /**
   * Information about the ticket.
   */
  info?: string | undefined;
  /**
   * The result of the `/auth/authorization/ticket/info` API call.
   */
  action?: GetApiServiceIdAuthAuthorizationTicketInfoAction | undefined;
  /**
   * The code which represents the result of the API call.
   */
  resultCode?: string | undefined;
  /**
   * A short message which explains the result of the API call.
   */
  resultMessage?: string | undefined;
};

/** @internal */
export const GetApiServiceIdAuthAuthorizationTicketInfoRequest$inboundSchema:
  z.ZodType<
    GetApiServiceIdAuthAuthorizationTicketInfoRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    serviceId: z.string(),
    ticket: z.string(),
  });

/** @internal */
export type GetApiServiceIdAuthAuthorizationTicketInfoRequest$Outbound = {
  serviceId: string;
  ticket: string;
};

/** @internal */
export const GetApiServiceIdAuthAuthorizationTicketInfoRequest$outboundSchema:
  z.ZodType<
    GetApiServiceIdAuthAuthorizationTicketInfoRequest$Outbound,
    z.ZodTypeDef,
    GetApiServiceIdAuthAuthorizationTicketInfoRequest
  > = z.object({
    serviceId: z.string(),
    ticket: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiServiceIdAuthAuthorizationTicketInfoRequest$ {
  /** @deprecated use `GetApiServiceIdAuthAuthorizationTicketInfoRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiServiceIdAuthAuthorizationTicketInfoRequest$inboundSchema;
  /** @deprecated use `GetApiServiceIdAuthAuthorizationTicketInfoRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiServiceIdAuthAuthorizationTicketInfoRequest$outboundSchema;
  /** @deprecated use `GetApiServiceIdAuthAuthorizationTicketInfoRequest$Outbound` instead. */
  export type Outbound =
    GetApiServiceIdAuthAuthorizationTicketInfoRequest$Outbound;
}

export function getApiServiceIdAuthAuthorizationTicketInfoRequestToJSON(
  getApiServiceIdAuthAuthorizationTicketInfoRequest:
    GetApiServiceIdAuthAuthorizationTicketInfoRequest,
): string {
  return JSON.stringify(
    GetApiServiceIdAuthAuthorizationTicketInfoRequest$outboundSchema.parse(
      getApiServiceIdAuthAuthorizationTicketInfoRequest,
    ),
  );
}

export function getApiServiceIdAuthAuthorizationTicketInfoRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiServiceIdAuthAuthorizationTicketInfoRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiServiceIdAuthAuthorizationTicketInfoRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiServiceIdAuthAuthorizationTicketInfoRequest' from JSON`,
  );
}

/** @internal */
export const GetApiServiceIdAuthAuthorizationTicketInfoAction$inboundSchema:
  z.ZodNativeEnum<typeof GetApiServiceIdAuthAuthorizationTicketInfoAction> = z
    .nativeEnum(GetApiServiceIdAuthAuthorizationTicketInfoAction);

/** @internal */
export const GetApiServiceIdAuthAuthorizationTicketInfoAction$outboundSchema:
  z.ZodNativeEnum<typeof GetApiServiceIdAuthAuthorizationTicketInfoAction> =
    GetApiServiceIdAuthAuthorizationTicketInfoAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiServiceIdAuthAuthorizationTicketInfoAction$ {
  /** @deprecated use `GetApiServiceIdAuthAuthorizationTicketInfoAction$inboundSchema` instead. */
  export const inboundSchema =
    GetApiServiceIdAuthAuthorizationTicketInfoAction$inboundSchema;
  /** @deprecated use `GetApiServiceIdAuthAuthorizationTicketInfoAction$outboundSchema` instead. */
  export const outboundSchema =
    GetApiServiceIdAuthAuthorizationTicketInfoAction$outboundSchema;
}

/** @internal */
export const GetApiServiceIdAuthAuthorizationTicketInfoResponse$inboundSchema:
  z.ZodType<
    GetApiServiceIdAuthAuthorizationTicketInfoResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    info: z.string().optional(),
    action: GetApiServiceIdAuthAuthorizationTicketInfoAction$inboundSchema
      .optional(),
    resultCode: z.string().optional(),
    resultMessage: z.string().optional(),
  });

/** @internal */
export type GetApiServiceIdAuthAuthorizationTicketInfoResponse$Outbound = {
  info?: string | undefined;
  action?: string | undefined;
  resultCode?: string | undefined;
  resultMessage?: string | undefined;
};

/** @internal */
export const GetApiServiceIdAuthAuthorizationTicketInfoResponse$outboundSchema:
  z.ZodType<
    GetApiServiceIdAuthAuthorizationTicketInfoResponse$Outbound,
    z.ZodTypeDef,
    GetApiServiceIdAuthAuthorizationTicketInfoResponse
  > = z.object({
    info: z.string().optional(),
    action: GetApiServiceIdAuthAuthorizationTicketInfoAction$outboundSchema
      .optional(),
    resultCode: z.string().optional(),
    resultMessage: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiServiceIdAuthAuthorizationTicketInfoResponse$ {
  /** @deprecated use `GetApiServiceIdAuthAuthorizationTicketInfoResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetApiServiceIdAuthAuthorizationTicketInfoResponse$inboundSchema;
  /** @deprecated use `GetApiServiceIdAuthAuthorizationTicketInfoResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetApiServiceIdAuthAuthorizationTicketInfoResponse$outboundSchema;
  /** @deprecated use `GetApiServiceIdAuthAuthorizationTicketInfoResponse$Outbound` instead. */
  export type Outbound =
    GetApiServiceIdAuthAuthorizationTicketInfoResponse$Outbound;
}

export function getApiServiceIdAuthAuthorizationTicketInfoResponseToJSON(
  getApiServiceIdAuthAuthorizationTicketInfoResponse:
    GetApiServiceIdAuthAuthorizationTicketInfoResponse,
): string {
  return JSON.stringify(
    GetApiServiceIdAuthAuthorizationTicketInfoResponse$outboundSchema.parse(
      getApiServiceIdAuthAuthorizationTicketInfoResponse,
    ),
  );
}

export function getApiServiceIdAuthAuthorizationTicketInfoResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiServiceIdAuthAuthorizationTicketInfoResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiServiceIdAuthAuthorizationTicketInfoResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiServiceIdAuthAuthorizationTicketInfoResponse' from JSON`,
  );
}
