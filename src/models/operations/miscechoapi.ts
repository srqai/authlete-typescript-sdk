/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Response for 200
 */
export type MiscEchoApiResponse = {};

/** @internal */
export const MiscEchoApiResponse$inboundSchema: z.ZodType<
  MiscEchoApiResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type MiscEchoApiResponse$Outbound = {};

/** @internal */
export const MiscEchoApiResponse$outboundSchema: z.ZodType<
  MiscEchoApiResponse$Outbound,
  z.ZodTypeDef,
  MiscEchoApiResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MiscEchoApiResponse$ {
  /** @deprecated use `MiscEchoApiResponse$inboundSchema` instead. */
  export const inboundSchema = MiscEchoApiResponse$inboundSchema;
  /** @deprecated use `MiscEchoApiResponse$outboundSchema` instead. */
  export const outboundSchema = MiscEchoApiResponse$outboundSchema;
  /** @deprecated use `MiscEchoApiResponse$Outbound` instead. */
  export type Outbound = MiscEchoApiResponse$Outbound;
}

export function miscEchoApiResponseToJSON(
  miscEchoApiResponse: MiscEchoApiResponse,
): string {
  return JSON.stringify(
    MiscEchoApiResponse$outboundSchema.parse(miscEchoApiResponse),
  );
}

export function miscEchoApiResponseFromJSON(
  jsonString: string,
): SafeParseResult<MiscEchoApiResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MiscEchoApiResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MiscEchoApiResponse' from JSON`,
  );
}
