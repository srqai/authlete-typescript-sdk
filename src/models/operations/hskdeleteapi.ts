/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type HskDeleteApiRequest = {
  /**
   * A service ID.
   */
  serviceId: string;
  /**
   * The handle path parameter
   */
  handle: string;
};

/**
 * Result of the API call
 */
export const HskDeleteApiAction = {
  InternalServerError: "INTERNAL_SERVER_ERROR",
  BadRequest: "BAD_REQUEST",
  Created: "CREATED",
  Unauthorized: "UNAUTHORIZED",
  Forbidden: "FORBIDDEN",
  Json: "JSON",
  Jwt: "JWT",
  Ok: "OK",
} as const;
/**
 * Result of the API call
 */
export type HskDeleteApiAction = ClosedEnum<typeof HskDeleteApiAction>;

/**
 * An object containing schema data
 */
export type HskDeleteApiResponse = {
  /**
   * The code which represents the result of the API call.
   */
  resultCode?: string | undefined;
  /**
   * A short message which explains the result of the API call.
   */
  resultMessage?: string | undefined;
  /**
   * Result of the API call
   */
  action?: HskDeleteApiAction | undefined;
  /**
   * Holds information about a key managed in an HSM (Hardware Security Module)
   *
   * @remarks
   */
  hsk?: models.Hsk | undefined;
};

/** @internal */
export const HskDeleteApiRequest$inboundSchema: z.ZodType<
  HskDeleteApiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  serviceId: z.string(),
  handle: z.string(),
});

/** @internal */
export type HskDeleteApiRequest$Outbound = {
  serviceId: string;
  handle: string;
};

/** @internal */
export const HskDeleteApiRequest$outboundSchema: z.ZodType<
  HskDeleteApiRequest$Outbound,
  z.ZodTypeDef,
  HskDeleteApiRequest
> = z.object({
  serviceId: z.string(),
  handle: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HskDeleteApiRequest$ {
  /** @deprecated use `HskDeleteApiRequest$inboundSchema` instead. */
  export const inboundSchema = HskDeleteApiRequest$inboundSchema;
  /** @deprecated use `HskDeleteApiRequest$outboundSchema` instead. */
  export const outboundSchema = HskDeleteApiRequest$outboundSchema;
  /** @deprecated use `HskDeleteApiRequest$Outbound` instead. */
  export type Outbound = HskDeleteApiRequest$Outbound;
}

export function hskDeleteApiRequestToJSON(
  hskDeleteApiRequest: HskDeleteApiRequest,
): string {
  return JSON.stringify(
    HskDeleteApiRequest$outboundSchema.parse(hskDeleteApiRequest),
  );
}

export function hskDeleteApiRequestFromJSON(
  jsonString: string,
): SafeParseResult<HskDeleteApiRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HskDeleteApiRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HskDeleteApiRequest' from JSON`,
  );
}

/** @internal */
export const HskDeleteApiAction$inboundSchema: z.ZodNativeEnum<
  typeof HskDeleteApiAction
> = z.nativeEnum(HskDeleteApiAction);

/** @internal */
export const HskDeleteApiAction$outboundSchema: z.ZodNativeEnum<
  typeof HskDeleteApiAction
> = HskDeleteApiAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HskDeleteApiAction$ {
  /** @deprecated use `HskDeleteApiAction$inboundSchema` instead. */
  export const inboundSchema = HskDeleteApiAction$inboundSchema;
  /** @deprecated use `HskDeleteApiAction$outboundSchema` instead. */
  export const outboundSchema = HskDeleteApiAction$outboundSchema;
}

/** @internal */
export const HskDeleteApiResponse$inboundSchema: z.ZodType<
  HskDeleteApiResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: HskDeleteApiAction$inboundSchema.optional(),
  hsk: models.Hsk$inboundSchema.optional(),
});

/** @internal */
export type HskDeleteApiResponse$Outbound = {
  resultCode?: string | undefined;
  resultMessage?: string | undefined;
  action?: string | undefined;
  hsk?: models.Hsk$Outbound | undefined;
};

/** @internal */
export const HskDeleteApiResponse$outboundSchema: z.ZodType<
  HskDeleteApiResponse$Outbound,
  z.ZodTypeDef,
  HskDeleteApiResponse
> = z.object({
  resultCode: z.string().optional(),
  resultMessage: z.string().optional(),
  action: HskDeleteApiAction$outboundSchema.optional(),
  hsk: models.Hsk$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HskDeleteApiResponse$ {
  /** @deprecated use `HskDeleteApiResponse$inboundSchema` instead. */
  export const inboundSchema = HskDeleteApiResponse$inboundSchema;
  /** @deprecated use `HskDeleteApiResponse$outboundSchema` instead. */
  export const outboundSchema = HskDeleteApiResponse$outboundSchema;
  /** @deprecated use `HskDeleteApiResponse$Outbound` instead. */
  export type Outbound = HskDeleteApiResponse$Outbound;
}

export function hskDeleteApiResponseToJSON(
  hskDeleteApiResponse: HskDeleteApiResponse,
): string {
  return JSON.stringify(
    HskDeleteApiResponse$outboundSchema.parse(hskDeleteApiResponse),
  );
}

export function hskDeleteApiResponseFromJSON(
  jsonString: string,
): SafeParseResult<HskDeleteApiResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HskDeleteApiResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HskDeleteApiResponse' from JSON`,
  );
}
