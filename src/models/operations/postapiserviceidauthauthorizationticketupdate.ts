/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody = {
  /**
   * The ticket.
   */
  ticket: string;
  /**
   * The information about the ticket.
   */
  info: string;
};

export type PostApiServiceIdAuthAuthorizationTicketUpdateRequest = {
  serviceId: string;
  requestBody: PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody;
};

/**
 * The result of the /auth/authorization/ticket/info API call.
 */
export const PostApiServiceIdAuthAuthorizationTicketUpdateAction = {
  Ok: "OK",
  NotFound: "NOT_FOUND",
  CallerError: "CALLER_ERROR",
  AuthleteError: "AUTHLETE_ERROR",
} as const;
/**
 * The result of the /auth/authorization/ticket/info API call.
 */
export type PostApiServiceIdAuthAuthorizationTicketUpdateAction = ClosedEnum<
  typeof PostApiServiceIdAuthAuthorizationTicketUpdateAction
>;

/**
 * Successful operation
 */
export type PostApiServiceIdAuthAuthorizationTicketUpdateResponse = {
  /**
   * Information about the ticket.
   */
  info?: string | undefined;
  /**
   * The result of the /auth/authorization/ticket/info API call.
   */
  action?: PostApiServiceIdAuthAuthorizationTicketUpdateAction | undefined;
  /**
   * The code which represents the result of the API call.
   */
  resultCode?: string | undefined;
  /**
   * A short message which explains the result of the API call.
   */
  resultMessage?: string | undefined;
};

/** @internal */
export const PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$inboundSchema:
  z.ZodType<
    PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    ticket: z.string(),
    info: z.string(),
  });

/** @internal */
export type PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$Outbound =
  {
    ticket: string;
    info: string;
  };

/** @internal */
export const PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$outboundSchema:
  z.ZodType<
    PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$Outbound,
    z.ZodTypeDef,
    PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody
  > = z.object({
    ticket: z.string(),
    info: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$ {
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$inboundSchema;
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$outboundSchema;
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$Outbound` instead. */
  export type Outbound =
    PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$Outbound;
}

export function postApiServiceIdAuthAuthorizationTicketUpdateRequestBodyToJSON(
  postApiServiceIdAuthAuthorizationTicketUpdateRequestBody:
    PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody,
): string {
  return JSON.stringify(
    PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$outboundSchema
      .parse(postApiServiceIdAuthAuthorizationTicketUpdateRequestBody),
  );
}

export function postApiServiceIdAuthAuthorizationTicketUpdateRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody' from JSON`,
  );
}

/** @internal */
export const PostApiServiceIdAuthAuthorizationTicketUpdateRequest$inboundSchema:
  z.ZodType<
    PostApiServiceIdAuthAuthorizationTicketUpdateRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    serviceId: z.string(),
    RequestBody: z.lazy(() =>
      PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "RequestBody": "requestBody",
    });
  });

/** @internal */
export type PostApiServiceIdAuthAuthorizationTicketUpdateRequest$Outbound = {
  serviceId: string;
  RequestBody:
    PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$Outbound;
};

/** @internal */
export const PostApiServiceIdAuthAuthorizationTicketUpdateRequest$outboundSchema:
  z.ZodType<
    PostApiServiceIdAuthAuthorizationTicketUpdateRequest$Outbound,
    z.ZodTypeDef,
    PostApiServiceIdAuthAuthorizationTicketUpdateRequest
  > = z.object({
    serviceId: z.string(),
    requestBody: z.lazy(() =>
      PostApiServiceIdAuthAuthorizationTicketUpdateRequestBody$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiServiceIdAuthAuthorizationTicketUpdateRequest$ {
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostApiServiceIdAuthAuthorizationTicketUpdateRequest$inboundSchema;
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostApiServiceIdAuthAuthorizationTicketUpdateRequest$outboundSchema;
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateRequest$Outbound` instead. */
  export type Outbound =
    PostApiServiceIdAuthAuthorizationTicketUpdateRequest$Outbound;
}

export function postApiServiceIdAuthAuthorizationTicketUpdateRequestToJSON(
  postApiServiceIdAuthAuthorizationTicketUpdateRequest:
    PostApiServiceIdAuthAuthorizationTicketUpdateRequest,
): string {
  return JSON.stringify(
    PostApiServiceIdAuthAuthorizationTicketUpdateRequest$outboundSchema.parse(
      postApiServiceIdAuthAuthorizationTicketUpdateRequest,
    ),
  );
}

export function postApiServiceIdAuthAuthorizationTicketUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiServiceIdAuthAuthorizationTicketUpdateRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiServiceIdAuthAuthorizationTicketUpdateRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiServiceIdAuthAuthorizationTicketUpdateRequest' from JSON`,
  );
}

/** @internal */
export const PostApiServiceIdAuthAuthorizationTicketUpdateAction$inboundSchema:
  z.ZodNativeEnum<typeof PostApiServiceIdAuthAuthorizationTicketUpdateAction> =
    z.nativeEnum(PostApiServiceIdAuthAuthorizationTicketUpdateAction);

/** @internal */
export const PostApiServiceIdAuthAuthorizationTicketUpdateAction$outboundSchema:
  z.ZodNativeEnum<typeof PostApiServiceIdAuthAuthorizationTicketUpdateAction> =
    PostApiServiceIdAuthAuthorizationTicketUpdateAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiServiceIdAuthAuthorizationTicketUpdateAction$ {
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateAction$inboundSchema` instead. */
  export const inboundSchema =
    PostApiServiceIdAuthAuthorizationTicketUpdateAction$inboundSchema;
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateAction$outboundSchema` instead. */
  export const outboundSchema =
    PostApiServiceIdAuthAuthorizationTicketUpdateAction$outboundSchema;
}

/** @internal */
export const PostApiServiceIdAuthAuthorizationTicketUpdateResponse$inboundSchema:
  z.ZodType<
    PostApiServiceIdAuthAuthorizationTicketUpdateResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    info: z.string().optional(),
    action: PostApiServiceIdAuthAuthorizationTicketUpdateAction$inboundSchema
      .optional(),
    resultCode: z.string().optional(),
    resultMessage: z.string().optional(),
  });

/** @internal */
export type PostApiServiceIdAuthAuthorizationTicketUpdateResponse$Outbound = {
  info?: string | undefined;
  action?: string | undefined;
  resultCode?: string | undefined;
  resultMessage?: string | undefined;
};

/** @internal */
export const PostApiServiceIdAuthAuthorizationTicketUpdateResponse$outboundSchema:
  z.ZodType<
    PostApiServiceIdAuthAuthorizationTicketUpdateResponse$Outbound,
    z.ZodTypeDef,
    PostApiServiceIdAuthAuthorizationTicketUpdateResponse
  > = z.object({
    info: z.string().optional(),
    action: PostApiServiceIdAuthAuthorizationTicketUpdateAction$outboundSchema
      .optional(),
    resultCode: z.string().optional(),
    resultMessage: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiServiceIdAuthAuthorizationTicketUpdateResponse$ {
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateResponse$inboundSchema` instead. */
  export const inboundSchema =
    PostApiServiceIdAuthAuthorizationTicketUpdateResponse$inboundSchema;
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateResponse$outboundSchema` instead. */
  export const outboundSchema =
    PostApiServiceIdAuthAuthorizationTicketUpdateResponse$outboundSchema;
  /** @deprecated use `PostApiServiceIdAuthAuthorizationTicketUpdateResponse$Outbound` instead. */
  export type Outbound =
    PostApiServiceIdAuthAuthorizationTicketUpdateResponse$Outbound;
}

export function postApiServiceIdAuthAuthorizationTicketUpdateResponseToJSON(
  postApiServiceIdAuthAuthorizationTicketUpdateResponse:
    PostApiServiceIdAuthAuthorizationTicketUpdateResponse,
): string {
  return JSON.stringify(
    PostApiServiceIdAuthAuthorizationTicketUpdateResponse$outboundSchema.parse(
      postApiServiceIdAuthAuthorizationTicketUpdateResponse,
    ),
  );
}

export function postApiServiceIdAuthAuthorizationTicketUpdateResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiServiceIdAuthAuthorizationTicketUpdateResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiServiceIdAuthAuthorizationTicketUpdateResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiServiceIdAuthAuthorizationTicketUpdateResponse' from JSON`,
  );
}
