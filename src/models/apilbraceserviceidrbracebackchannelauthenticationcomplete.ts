/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type APILBraceserviceIdRBraceBackchannelAuthenticationComplete = {};

/** @internal */
export const APILBraceserviceIdRBraceBackchannelAuthenticationComplete$inboundSchema:
  z.ZodType<
    APILBraceserviceIdRBraceBackchannelAuthenticationComplete,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type APILBraceserviceIdRBraceBackchannelAuthenticationComplete$Outbound =
  {};

/** @internal */
export const APILBraceserviceIdRBraceBackchannelAuthenticationComplete$outboundSchema:
  z.ZodType<
    APILBraceserviceIdRBraceBackchannelAuthenticationComplete$Outbound,
    z.ZodTypeDef,
    APILBraceserviceIdRBraceBackchannelAuthenticationComplete
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace APILBraceserviceIdRBraceBackchannelAuthenticationComplete$ {
  /** @deprecated use `APILBraceserviceIdRBraceBackchannelAuthenticationComplete$inboundSchema` instead. */
  export const inboundSchema =
    APILBraceserviceIdRBraceBackchannelAuthenticationComplete$inboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceBackchannelAuthenticationComplete$outboundSchema` instead. */
  export const outboundSchema =
    APILBraceserviceIdRBraceBackchannelAuthenticationComplete$outboundSchema;
  /** @deprecated use `APILBraceserviceIdRBraceBackchannelAuthenticationComplete$Outbound` instead. */
  export type Outbound =
    APILBraceserviceIdRBraceBackchannelAuthenticationComplete$Outbound;
}

export function apilBraceserviceIdRBraceBackchannelAuthenticationCompleteToJSON(
  apilBraceserviceIdRBraceBackchannelAuthenticationComplete:
    APILBraceserviceIdRBraceBackchannelAuthenticationComplete,
): string {
  return JSON.stringify(
    APILBraceserviceIdRBraceBackchannelAuthenticationComplete$outboundSchema
      .parse(apilBraceserviceIdRBraceBackchannelAuthenticationComplete),
  );
}

export function apilBraceserviceIdRBraceBackchannelAuthenticationCompleteFromJSON(
  jsonString: string,
): SafeParseResult<
  APILBraceserviceIdRBraceBackchannelAuthenticationComplete,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      APILBraceserviceIdRBraceBackchannelAuthenticationComplete$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'APILBraceserviceIdRBraceBackchannelAuthenticationComplete' from JSON`,
  );
}
