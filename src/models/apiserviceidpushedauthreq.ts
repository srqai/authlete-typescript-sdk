/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * An object containing api_serviceid_pushed_auth_req data
 */
export type ApiServiceIdPushedAuthReq = {
  /**
   * The pushed authorization request body received from the client application.
   *
   * @remarks
   *
   * The value of parameters is the entire entity body (which is formatted in `application/x-www-form-urlencoded`) of the request from
   * the client application.
   */
  parameters: string;
  /**
   * The client ID extracted from `Authorization` header of the pushed request from the client application.
   *
   * @remarks
   */
  clientId?: number | undefined;
  /**
   * The client secret extracted from `Authorization` header of the pushed authorization request from the client application.
   *
   * @remarks
   */
  clientSecret?: string | undefined;
  /**
   * The client certificate from the MTLS connection to pushed authorization endpoint from the client application.
   */
  clientCertificate?: string | undefined;
  /**
   * The certificate path presented by the client during client authentication. These certificates are strings in PEM format.
   *
   * @remarks
   */
  clientCertificatePath?: string | undefined;
  /**
   * DPoP Header
   *
   * @remarks
   */
  dpop?: string | undefined;
  /**
   * HTTP Method (for DPoP validation).
   *
   * @remarks
   */
  htm?: string | undefined;
  /**
   * HTTP URL base (for DPoP validation).
   *
   * @remarks
   */
  htu?: string | undefined;
};

/** @internal */
export const ApiServiceIdPushedAuthReq$inboundSchema: z.ZodType<
  ApiServiceIdPushedAuthReq,
  z.ZodTypeDef,
  unknown
> = z.object({
  parameters: z.string(),
  clientId: z.number().int().optional(),
  clientSecret: z.string().optional(),
  clientCertificate: z.string().optional(),
  clientCertificatePath: z.string().optional(),
  dpop: z.string().optional(),
  htm: z.string().optional(),
  htu: z.string().optional(),
});

/** @internal */
export type ApiServiceIdPushedAuthReq$Outbound = {
  parameters: string;
  clientId?: number | undefined;
  clientSecret?: string | undefined;
  clientCertificate?: string | undefined;
  clientCertificatePath?: string | undefined;
  dpop?: string | undefined;
  htm?: string | undefined;
  htu?: string | undefined;
};

/** @internal */
export const ApiServiceIdPushedAuthReq$outboundSchema: z.ZodType<
  ApiServiceIdPushedAuthReq$Outbound,
  z.ZodTypeDef,
  ApiServiceIdPushedAuthReq
> = z.object({
  parameters: z.string(),
  clientId: z.number().int().optional(),
  clientSecret: z.string().optional(),
  clientCertificate: z.string().optional(),
  clientCertificatePath: z.string().optional(),
  dpop: z.string().optional(),
  htm: z.string().optional(),
  htu: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiServiceIdPushedAuthReq$ {
  /** @deprecated use `ApiServiceIdPushedAuthReq$inboundSchema` instead. */
  export const inboundSchema = ApiServiceIdPushedAuthReq$inboundSchema;
  /** @deprecated use `ApiServiceIdPushedAuthReq$outboundSchema` instead. */
  export const outboundSchema = ApiServiceIdPushedAuthReq$outboundSchema;
  /** @deprecated use `ApiServiceIdPushedAuthReq$Outbound` instead. */
  export type Outbound = ApiServiceIdPushedAuthReq$Outbound;
}

export function apiServiceIdPushedAuthReqToJSON(
  apiServiceIdPushedAuthReq: ApiServiceIdPushedAuthReq,
): string {
  return JSON.stringify(
    ApiServiceIdPushedAuthReq$outboundSchema.parse(apiServiceIdPushedAuthReq),
  );
}

export function apiServiceIdPushedAuthReqFromJSON(
  jsonString: string,
): SafeParseResult<ApiServiceIdPushedAuthReq, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApiServiceIdPushedAuthReq$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiServiceIdPushedAuthReq' from JSON`,
  );
}
