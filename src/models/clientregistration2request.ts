/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ClientRegistration2Request = {};

/** @internal */
export const ClientRegistration2Request$inboundSchema: z.ZodType<
  ClientRegistration2Request,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ClientRegistration2Request$Outbound = {};

/** @internal */
export const ClientRegistration2Request$outboundSchema: z.ZodType<
  ClientRegistration2Request$Outbound,
  z.ZodTypeDef,
  ClientRegistration2Request
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientRegistration2Request$ {
  /** @deprecated use `ClientRegistration2Request$inboundSchema` instead. */
  export const inboundSchema = ClientRegistration2Request$inboundSchema;
  /** @deprecated use `ClientRegistration2Request$outboundSchema` instead. */
  export const outboundSchema = ClientRegistration2Request$outboundSchema;
  /** @deprecated use `ClientRegistration2Request$Outbound` instead. */
  export type Outbound = ClientRegistration2Request$Outbound;
}

export function clientRegistration2RequestToJSON(
  clientRegistration2Request: ClientRegistration2Request,
): string {
  return JSON.stringify(
    ClientRegistration2Request$outboundSchema.parse(clientRegistration2Request),
  );
}

export function clientRegistration2RequestFromJSON(
  jsonString: string,
): SafeParseResult<ClientRegistration2Request, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ClientRegistration2Request$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ClientRegistration2Request' from JSON`,
  );
}
