/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { hardwareSecurityKeyHskCreateApi } from "../funcs/hardwareSecurityKeyHskCreateApi.js";
import { hardwareSecurityKeyHskCreateApiForm } from "../funcs/hardwareSecurityKeyHskCreateApiForm.js";
import { hardwareSecurityKeyHskDeleteApi } from "../funcs/hardwareSecurityKeyHskDeleteApi.js";
import { hardwareSecurityKeyHskGetApi } from "../funcs/hardwareSecurityKeyHskGetApi.js";
import { hardwareSecurityKeyHskGetListApi } from "../funcs/hardwareSecurityKeyHskGetListApi.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class HardwareSecurityKey extends ClientSDK {
  /**
   * Create Security Key
   */
  async hskCreateApi(
    request: operations.HskCreateApiRequest,
    options?: RequestOptions,
  ): Promise<operations.HskCreateApiResponse> {
    return unwrapAsync(hardwareSecurityKeyHskCreateApi(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Security Key
   */
  async hskCreateApiForm(
    request: operations.HskCreateApiFormRequest,
    options?: RequestOptions,
  ): Promise<operations.HskCreateApiFormResponse> {
    return unwrapAsync(hardwareSecurityKeyHskCreateApiForm(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Security Key
   */
  async hskDeleteApi(
    request: operations.HskDeleteApiRequest,
    options?: RequestOptions,
  ): Promise<operations.HskDeleteApiResponse> {
    return unwrapAsync(hardwareSecurityKeyHskDeleteApi(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Security Key
   */
  async hskGetApi(
    request: operations.HskGetApiRequest,
    options?: RequestOptions,
  ): Promise<operations.HskGetApiResponse> {
    return unwrapAsync(hardwareSecurityKeyHskGetApi(
      this,
      request,
      options,
    ));
  }

  /**
   * List Security Keys
   */
  async hskGetListApi(
    request: operations.HskGetListApiRequest,
    options?: RequestOptions,
  ): Promise<operations.HskGetListApiResponse> {
    return unwrapAsync(hardwareSecurityKeyHskGetListApi(
      this,
      request,
      options,
    ));
  }
}
